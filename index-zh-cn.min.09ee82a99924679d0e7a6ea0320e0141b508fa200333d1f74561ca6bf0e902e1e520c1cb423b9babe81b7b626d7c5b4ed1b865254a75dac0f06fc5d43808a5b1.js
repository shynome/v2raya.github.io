var suggestions=document.getElementById('suggestions'),userinput=document.getElementById('userinput');document.addEventListener('keydown',inputFocus);function inputFocus(a){a.keyCode===191&&(a.preventDefault(),userinput.focus()),a.keyCode===27&&(userinput.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(b){const d=suggestions.querySelectorAll('a'),e=[...d],a=e.indexOf(document.activeElement);let c=0;b.keyCode===38?(b.preventDefault(),c=a>0?a-1:0,d[c].focus()):b.keyCode===40&&(b.preventDefault(),c=a+1<e.length?a+1:a,d[c].focus())}(function(){var a=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:'id',store:["href","title","description"],index:["title","description","content"]}});a.add({id:0,href:"https://v2raya.org/docs/prologue/introduction/",title:"介绍",description:"v2rayA 是一个易用而强大的，专注于 Linux 的 V2Ray 客户端。",content:'\u003ch2 id="起步"\u003e起步\u003c/h2\u003e\n\u003cp\u003e本章对 v2rayA 进行上手介绍。\u003c/p\u003e\n\u003ch3 id="下载与安装"\u003e下载与安装\u003c/h3\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e如果你已经安装了 v2ray-core 和 v2rayA，可以跳过此节。\u003c/p\u003e\u003c/div\u003e\n\u003cp\u003e这一节介绍了如何在各个 Linux 发行版以及 Docker 中运行 v2rayA。 \u003ca class="link" href="/docs/prologue/installation/" \u003e下载与安装 →\u003c/a\u003e\n\u003c/p\u003e\n\u003ch3 id="快速上手"\u003e快速上手\u003c/h3\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e如果你对 v2rayA 的基本使用已轻车熟路，可以跳过此节。\u003c/p\u003e\u003c/div\u003e\n\u003cp\u003e这一节将对 v2rayA 的基本使用规则进行介绍。 \u003ca class="link" href="/docs/prologue/quick-start/" \u003e快速上手 →\u003c/a\u003e\n\u003c/p\u003e\n\u003ch2 id="手册"\u003e手册\u003c/h2\u003e\n\u003cp\u003e这一章对 v2rayA 的各个功能进行介绍。侧重点为每个具体功能的用法、表现行为，以及相似功能之间的区别。 \u003ca class="link" href="/docs/manual/" \u003e手册 →\u003c/a\u003e\n\u003c/p\u003e\n\u003ch2 id="高级应用"\u003e高级应用\u003c/h2\u003e\n\u003cp\u003e这一章对 v2rayA 的高级应用进行介绍，它涉及了诸多功能的组合和灵活用法，以完成特定的任务。 \u003ca class="link" href="/docs/advanced-application/" \u003e高级应用 →\u003c/a\u003e\n\u003c/p\u003e\n'}).add({id:1,href:"https://v2raya.org/docs/prologue/installation/macos/",title:"macOS",description:"安装核心和 v2rayA",content:'\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003ev2rayA 与 v2ray / xray 尚未支持 macOS / FreeBSD 之上的 Packet Filter 防火墙，因此透明代理无法启用。安全起见，本 wiki 将以非 root 权限来运行 v2rayA。\u003c/p\u003e\u003c/div\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e建议从 brew 安装 v2ray 核心，如此 v2rayA 将自动使用你电脑上现有的 v2ray。如果不从 brew 安装核心，你将需要手动指定核心所在路径。\u003c/p\u003e\u003c/div\u003e\n\u003ch2 id="使用-homebrew-安装"\u003e使用 Homebrew 安装\u003c/h2\u003e\n\u003cp\u003e请确保安装了 \u003ca class="link" href="https://brew.sh/"  target="_blank" rel="noopener"\n    \u003eHomebrew\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 并工作正常。\u003c/p\u003e\n\u003ch3 id="安装"\u003e安装\u003c/h3\u003e\n\u003cp\u003e添加 v2rayA 的 Tap：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebrew tap v2raya/v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e安装 v2rayA:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebrew install v2raya/v2raya/v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="运行"\u003e运行\u003c/h3\u003e\n\u003cp\u003e安装完成之后可以在终端通过 \u003ccode\u003ev2raya --lite\u003c/code\u003e 命令运行，也可以启动服务：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebrew services start v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="手动安装"\u003e手动安装\u003c/h2\u003e\n\u003ch3 id="创建目录"\u003e创建目录\u003c/h3\u003e\n\u003cp\u003e这些目录可能已经存在，创建之前请注意检查。\u003c/p\u003e\n\u003cp\u003e二进制所在目录：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo mkdir /usr/local/bin/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e数据文件所在目录：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo mkdir -p /usr/local/share/v2ray/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e服务文件所在目录：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003emkdir ~/Library/LaunchAgents/\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="下载-v2raya"\u003e下载 v2rayA\u003c/h3\u003e\n\u003cp\u003e从 \u003ca class="link" href="https://github.com/v2rayA/v2rayA/releases"  target="_blank" rel="noopener"\n    \u003eGitHub Releases\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 或 GitHub Action 下载适用于 macOS 的二进制文件，然后重命名为 \u003ccode\u003ev2raya\u003c/code\u003e，并将其保存到 \u003ccode\u003e/usr/local/bin/\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e示例：\u003c/p\u003e\n\u003cp\u003ex86_64:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo curl -L https://github.com/v2rayA/v2rayA/releases/download/v1.5.7/v2raya_darwin_x64_1.5.7 -o /usr/local/bin/v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003earm64:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo curl -L https://github.com/v2rayA/v2rayA/releases/download/v1.5.7/v2raya_darwin_arm64_1.5.7 -o /usr/local/bin/v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="下载-v2ray-核心--xray-核心"\u003e下载 V2Ray 核心 / Xray 核心\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e安装 V2Ray：\u003ca class="link" href="https://www.v2fly.org/guide/install.html"  target="_blank" rel="noopener"\n    \u003ehttps://www.v2fly.org/guide/install.html\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003cbr\u003e\n安装 Xray：\u003ca class="link" href="https://xtls.github.io/document/install.html"  target="_blank" rel="noopener"\n    \u003ehttps://xtls.github.io/document/install.html\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e解压压缩包后将其中的文件移动到对应目录：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo mv v2ray /usr/local/bin/\nsudo mv v2ctl /usr/local/bin/\nsudo mv *dat /usr/local/share/v2ray/\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="给予权限"\u003e给予权限\u003c/h3\u003e\n\u003cp\u003e给予 v2rayA 与 v2ray 可执行权限：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo chmod 755 /usr/local/bin/v2raya\nsudo chmod 755 /usr/local/bin/v2ray\nsudo chmod 755 /usr/local/bin/v2ctl\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e如果遇到 macOS 的安全限制，那么需要运行以下命令：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo xattr -d -r com.apple.quarantine  /usr/local/bin/*\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="建立服务文件"\u003e建立服务文件\u003c/h3\u003e\n\u003cp\u003e新建服务文件并保存到 \u003ccode\u003e~/Library/LaunchAgents/\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e示例：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enano ~/Library/LaunchAgents/org.v2raya.v2raya.plist\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e内容如下：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-xml"\u003e\u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;UTF-8\u0026quot;?\u0026gt;\n\u0026lt;!DOCTYPE plist PUBLIC \u0026quot;-//Apple//DTD PLIST 1.0//EN\u0026quot; \u0026quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd\u0026quot;\u0026gt;\n\u0026lt;plist version=\u0026quot;1.0\u0026quot;\u0026gt;\n\u0026lt;dict\u0026gt;\n      \u0026lt;key\u0026gt;EnvironmentVariables\u0026lt;/key\u0026gt;\n      \u0026lt;dict\u0026gt;\n            \u0026lt;key\u0026gt;V2RAYA_LOG_FILE\u0026lt;/key\u0026gt;\n            \u0026lt;string\u0026gt;/tmp/v2raya.log\u0026lt;/string\u0026gt;\n            \u0026lt;key\u0026gt;V2RAYA_V2RAY_BIN\u0026lt;/key\u0026gt;\n            \u0026lt;string\u0026gt;/usr/local/bin/v2ray\u0026lt;/string\u0026gt;\n      \u0026lt;/dict\u0026gt;\n      \u0026lt;key\u0026gt;KeepAlive\u0026lt;/key\u0026gt;\n      \u0026lt;true/\u0026gt;\n      \u0026lt;key\u0026gt;Label\u0026lt;/key\u0026gt;\n      \u0026lt;string\u0026gt;org.v2raya.v2raya\u0026lt;/string\u0026gt;\n      \u0026lt;key\u0026gt;ProgramArguments\u0026lt;/key\u0026gt;\n      \u0026lt;array\u0026gt;\n            \u0026lt;string\u0026gt;/usr/local/bin/v2raya\u0026lt;/string\u0026gt;\n            \u0026lt;string\u0026gt;--lite\u0026lt;/string\u0026gt;\n      \u0026lt;/array\u0026gt;\n      \u0026lt;key\u0026gt;RunAtLoad\u0026lt;/key\u0026gt;\n      \u0026lt;true/\u0026gt;\n\u0026lt;/dict\u0026gt;\n\u0026lt;/plist\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="运行-1"\u003e运行\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003elaunchctl load ~/Library/LaunchAgents/org.v2raya.v2raya.plist\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e如果要关掉 v2rayA 服务，将上述命令从 \u003ccode\u003eload\u003c/code\u003e 替换为 \u003ccode\u003eunload\u003c/code\u003e 即可。可以通过 Web 前端查看日志。\u003c/p\u003e\n'}).add({id:2,href:"https://v2raya.org/docs/prologue/installation/windows/",title:"Windows",description:"安装核心和 v2rayA",content:'\u003ch2 id="使用安装包"\u003e使用安装包\u003c/h2\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e安装包将内置 v2ray-core，如需更换 Xray-core，可在安装完毕后于安装目录手动进行替换。\u003c/p\u003e\u003c/div\u003e\n\u003ch3 id="方法一通过-winget-自动安装"\u003e方法一：通过 WinGet 自动安装\u003c/h3\u003e\n\u003cp\u003e\u003ca class="link" href="https://www.microsoft.com/en-us/p/app-installer/9nblggh4nns1"  target="_blank" rel="noopener"\n    \u003eWinGet\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 是微软推出的软件包管理器，适用于 Windows 10 以及更新版本的操作系统。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003ewinget install --id v2raya.win\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="方法二手动运行安装包"\u003e方法二：手动运行安装包\u003c/h3\u003e\n\u003cp\u003e从 \u003ca class="link" href="https://github.com/v2rayA/v2rayA/releases"  target="_blank" rel="noopener"\n    \u003eGitHub Releases\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 下载适用于 Windows 的安装包，例如 installer_windows_x64_1.5.6.exe，按照指示安装完毕即可。\u003c/p\u003e\n\u003ch3 id="使用方法"\u003e使用方法\u003c/h3\u003e\n\u003cp\u003e通过安装包安装 v2rayA 后，v2rayA 将以服务的形式运行，默认情况下将开机自启，你也可以在任务管理器中的“服务”选项卡管理 v2rayA 的启动与停止。你可以通过运行桌面快捷方式或直接访问 http://127.0.0.1:2017 打开管理页面。\u003c/p\u003e\n\u003ch2 id="使用-scoop-安装二进制"\u003e使用 Scoop 安装二进制\u003c/h2\u003e\n\u003ch3 id="安装-v2raya"\u003e安装 v2rayA\u003c/h3\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e所有的命令都在 PowerShell 中运行，CMD 用户请注意命令格式。\u003c/p\u003e\u003c/div\u003e\n\u003cp\u003e你首先需要安装 \u003ca class="link" href="https://scoop.sh"  target="_blank" rel="noopener"\n    \u003eScoop\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n ，然后才能从 scoop 安装 v2rayA。\u003c/p\u003e\n\u003cp\u003e添加 Scoop 源：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003escoop bucket add v2raya https://github.com/v2rayA/v2raya-scoop\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e更新 Scoop 信息：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003escoop update\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e安装：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003escoop install v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eV2Ray 核心将作为依赖包而被安装，如果想使用 Xray，请指定 \u003ccode\u003e--v2ray-bin\u003c/code\u003e 参数。\u003c/p\u003e\n\u003ch3 id="运行-v2raya"\u003e运行 v2rayA\u003c/h3\u003e\n\u003ch4 id="前台运行"\u003e前台运行\u003c/h4\u003e\n\u003cp\u003e打开一个 CMD 或者 PowerShell 窗口，然后运行：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003ev2rayaWin --lite\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="后台运行"\u003e后台运行\u003c/h4\u003e\n\u003cp\u003e使用 \u003ccode\u003estart-v2raya\u003c/code\u003e 命令运行 v2rayA，使用 \u003ccode\u003estop-v2raya\u003c/code\u003e 命令关掉 v2rayA。\u003c/p\u003e\n\u003ch4 id="开机自启"\u003e开机自启\u003c/h4\u003e\n\u003cp\u003e将你 \u003ccode\u003escoop\\shims\u003c/code\u003e 目录下的 \u003ccode\u003estart-v2raya.cmd\u003c/code\u003e 复制到“启动”文件夹（一般位于 \u003ccode\u003eC:\\Users\\YourUserName\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\u003c/code\u003e）即可。示例命令如下：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003eCopy-Item -Path \'~\\scoop\\shims\\start-v2raya.cmd\' -Destination \'~\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\'\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="手动安装"\u003e手动安装\u003c/h2\u003e\n\u003ch3 id="下载-v2raya"\u003e下载 v2rayA\u003c/h3\u003e\n\u003cp\u003e从 \u003ca class="link" href="https://github.com/v2rayA/v2rayA/releases"  target="_blank" rel="noopener"\n    \u003eGitHub Releases\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 或 GitHub Action 下载适用于 Windows 的二进制文件（名称一般类似于 v2raya_windows_arm64_1.5.6.2.exe），然后重命名为 \u003ccode\u003ev2raya.exe\u003c/code\u003e（格外注意 Windows 系统下不能丢失扩展名）。\u003c/p\u003e\n\u003ch3 id="下载-v2ray-核心--xray-核心"\u003e下载 V2Ray 核心 / Xray 核心\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e安装 V2Ray：\u003ca class="link" href="https://www.v2fly.org/guide/install.html"  target="_blank" rel="noopener"\n    \u003ehttps://www.v2fly.org/guide/install.html\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\n安装 Xray：\u003ca class="link" href="https://xtls.github.io/document/install.html"  target="_blank" rel="noopener"\n    \u003ehttps://xtls.github.io/document/install.html\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e下载压缩包之后解压即可。\u003c/p\u003e\n\u003ch3 id="运行-v2raya-1"\u003e运行 v2rayA\u003c/h3\u003e\n\u003cp\u003e假设 v2rayA 与 v2ray 都放在了 \u003ccode\u003eD:\\v2rayA\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003eD:\\v2rayA\\v2raya.exe --lite --v2ray-bin D:\\v2rayA\\v2ray.exe\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="其它信息"\u003e其它信息\u003c/h2\u003e\n\u003cp\u003e以下假设 v2rayA 是通过 scoop 安装的，如果是手动安装的请注意修改路径。\u003c/p\u003e\n\u003ch3 id="作为服务运行使用-winsw"\u003e作为服务运行(使用 WinSW)\u003c/h3\u003e\n\u003cp\u003e使用 \u003ca class="link" href="https://github.com/winsw/winsw/"  target="_blank" rel="noopener"\n    \u003eWinSW\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 可以将 v2rayA 作为服务运行并自动开机启动，下载 WinSW 并将其重命名为 \u003ccode\u003ewinsw.exe\u003c/code\u003e，再将其放到一个你认为合适的目录，然后同样的目录下新建 \u003ccode\u003ev2raya-service.xml\u003c/code\u003e ：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-xml"\u003e\u0026lt;service\u0026gt;\n  \u0026lt;id\u0026gt;org.v2raya.v2raya\u0026lt;/id\u0026gt;\n  \u0026lt;name\u0026gt;v2rayA\u0026lt;/name\u0026gt;\n  \u0026lt;description\u0026gt;This service runs v2rayA.\u0026lt;/description\u0026gt;\n  \u0026lt;executable\u0026gt;C:\\Users\\YourHomeDir\\scoop\\apps\\v2raya\\current\\v2rayaWin.exe\u0026lt;/executable\u0026gt;\n  \u0026lt;arguments\u0026gt;--lite\u0026lt;/arguments\u0026gt;\n  \u0026lt;log mode=\u0026quot;roll\u0026quot;\u0026gt;\u0026lt;/log\u0026gt;\n  \u0026lt;env name=\u0026quot;V2RAYA_LOG_FILE\u0026quot; value=\u0026quot;%v2raya.log%\u0026quot;/\u0026gt;\n  \u0026lt;delayedAutoStart\u0026gt;true\u0026lt;/delayedAutoStart\u0026gt;\n  \u0026lt;onfailure action=\u0026quot;restart\u0026quot; delay=\u0026quot;10 sec\u0026quot;/\u0026gt;\n  \u0026lt;onfailure action=\u0026quot;restart\u0026quot; delay=\u0026quot;20 sec\u0026quot;/\u0026gt;\n  \u0026lt;serviceaccount\u0026gt;\n    \u0026lt;username\u0026gt;.\\YourUserName\u0026lt;/username\u0026gt;\n    \u0026lt;password\u0026gt;YourPassword\u0026lt;/password\u0026gt;\n    \u0026lt;allowservicelogon\u0026gt;true\u0026lt;/allowservicelogon\u0026gt;\n  \u0026lt;/serviceaccount\u0026gt;\n\u0026lt;/service\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e此处的用户名是你显示在“计算机管理”中的用户名，而非在控制面板或系统设置里面看到的完整用户名。密码是你的本地账户密码或者微软账户密码。\u003c/p\u003e\n\u003cp\u003e如果是手动安装的 v2rayA，那么你需要指定 \u003ccode\u003e--v2ray-bin\u003c/code\u003e 参数，或者将 v2ray 添加到 path。\u003c/p\u003e\n\u003cp\u003e保存文件，然后运行（需要管理员权限）：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003e.\\winsw.exe install .\\v2raya-service.xml\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="作为服务运行使用-nssm"\u003e作为服务运行(使用 NSSM)\u003c/h3\u003e\n\u003cp\u003e使用 \u003ca class="link" href="https://nssm.cc/"  target="_blank" rel="noopener"\n    \u003eNSSM - the Non-Sucking Service Manager\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 可以将 v2rayA 作为服务运行并自动开机启动。\n下载 NSSM 并放在一个合适的目录或者使用 scoop 安装 NSSM。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003escoop install nssm\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e然后以管理员身份安装一个名为 v2raya 的 service：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003enssm install v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e此时会弹出一个 NSSM 窗口：\n\u003ccode\u003ePath\u003c/code\u003e 为 v2rayA 路径 \u003ccode\u003eC:\\Users\\YourHomeDir\\scoop\\apps\\v2raya\\current\\v2rayaWin.exe\u003c/code\u003e；\n\u003ccode\u003eSrartup directory\u003c/code\u003e 可留空，默认为 v2rayA 所在目录；\n\u003ccode\u003eArguments\u003c/code\u003e 填写 \u003ccode\u003e--lite --v2ray-bin C:\\Users\\YourHomeDir\\scoop\\apps\\v2ray\\current\\v2ray.exe\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e可能用得到的其他参数：\u003ccode\u003e--log-file v2raya.log\u003c/code\u003e 会在 \u003ccode\u003eSrartup directory\u003c/code\u003e 生成 log 文件并在前端显示。\u003c/p\u003e\n\u003cp\u003e最后以管理员身份运行：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003enssm start v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003enssm remove v2raya # 删除服务\nnssm edit v2raya # 编辑服务\nnssm start/stop/restart v2raya # 启动、停止、重启服务\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="后台运行通过-powershell-隐藏窗口"\u003e后台运行（通过 PowerShell 隐藏窗口）：\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003eStart-Process \u0026quot;v2rayaWin.exe\u0026quot; -Arg \u0026quot;--lite\u0026quot; -WindowStyle Hidden\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e如果想在后台运行时也在前端输出日志，需要在参数里指定日志的输出文件（这里指定工作目录为当前用户的\u003ccode\u003e%temp%\u003c/code\u003e目录），可以使用如下的powershell命令：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003eStart-Process \u0026quot;v2raya.exe\u0026quot; -WorkingDirectory \u0026quot;~\\AppData\\Local\\Temp\u0026quot; -Arg \u0026quot;--log-file v2raya.log\u0026quot; -WindowStyle Hidden\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="后台运行使用-conemu"\u003e后台运行（使用 ConEmu）\u003c/h3\u003e\n\u003cp\u003e\u003ca class="link" href="https://conemu.github.io/"  target="_blank" rel="noopener"\n    \u003eConEmu\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 是一个 Windows 下的终端程序，右击它窗口上的最小化按钮可以让它把窗口最小化到托盘区。在 ConEmu 中的 PowerShell 会话中使用 \u003ca class="link" href="#直接运行" \u003e直接运行\u003c/a\u003e\n 项里面提到的命令运行 v2rayA 即可。\u003c/p\u003e\n\u003ch2 id="系统代理"\u003e系统代理\u003c/h2\u003e\n\u003ch3 id="开启系统代理"\u003e开启系统代理\u003c/h3\u003e\n\u003cp\u003ev2rayA 目前在 Windows 上仅支持系统代理，可以在 Web 界面开启 System Proxy 以启用它。\u003c/p\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e部分应用（比如命令行程序）可能不读取或者不使用系统代理，你可能需要 \u003ccode\u003eproxychains\u003c/code\u003e 来强行让它们走代理，或者使用程序自身的代理配置。\u003c/p\u003e\u003c/div\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e如果 v2rayA 意外退出，那么 v2rayA 无法在退出的时候帮你取消系统代理，这种情况下你需要自行去 Internet 选项或者系统设置里面关掉代理。\u003c/p\u003e\u003c/div\u003e\n\u003ch3 id="让-uwp-应用走代理"\u003e让 UWP 应用走代理\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e参考内容：\u003ca class="link" href="https://github.com/Qv2ray/Qv2ray/issues/562"  target="_blank" rel="noopener"\n    \u003ehttps://github.com/Qv2ray/Qv2ray/issues/562\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eWindows 存在着开启系统代理后 UWP 应用无法联网的问题，这是因为出于安全问题，UWP 应用在默认情况下不允许访问本地回环地址，而大部分代理都会监听回环地址，以便提供 socks 与 http 代理入口。为了规避这个问题，我们需要借助一些工具，例如 Fiddler 的 \u003ca class="link" href="https://telerik-fiddler.s3.amazonaws.com/fiddler/addons/enableloopbackutility.exe"  target="_blank" rel="noopener"\n    \u003eEnable Loopback Utility\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 或开源项目 \u003ca class="link" href="https://github.com/tiagonmas/Windows-Loopback-Exemption-Manager"  target="_blank" rel="noopener"\n    \u003eLoopback Exemption Manager\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n。或者，你可以通过以下 PowerShell 命令来批量完成这个操作，打开一个具有管理员权限的 PowerShell 窗口，然后运行：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003eGet-ChildItem -Path Registry::\u0026quot;HKCU\\Software\\Classes\\Local Settings\\Software\\Microsoft\\Windows\\CurrentVersion\\AppContainer\\Mappings\\\u0026quot; -name | ForEach-Object {CheckNetIsolation.exe LoopbackExempt -a -p=\u0026quot;$_\u0026quot;}\n\u003c/code\u003e\u003c/pre\u003e\n'}).add({id:3,href:"https://v2raya.org/docs/prologue/installation/alpine/",title:"Alpine",description:"安装内核和 v2rayA",content:'\u003ch2 id="安装-v2ray-内核--xray-内核"\u003e安装 V2Ray 内核 / Xray 内核\u003c/h2\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e如果你已经安装了内核，可以跳过此节。\u003c/p\u003e\u003c/div\u003e\n\u003ch3 id="方法-1从软件包管理器安装"\u003e方法 1：从软件包管理器安装\u003c/h3\u003e\n\u003cp\u003e从 Alpine Linux 3.15 开始，V2Ray 已经进入了 Community 源。编辑 apk 的配置以启用 Community 源：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003evi /etc/apk/repositories\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-ini"\u003ehttp://dl-cdn.alpinelinux.org/alpine/v3.15/main\nhttp://dl-cdn.alpinelinux.org/alpine/v3.15/community\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e然后安装 V2Ray：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eapk update \u0026amp;\u0026amp; apk add v2ray\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="方法-2v2ray--xray-的官方脚本"\u003e方法 2：V2Ray / Xray 的官方脚本\u003c/h3\u003e\n\u003cp\u003eV2Ray 安装参考：\u003ca class="link" href="https://github.com/v2fly/alpinelinux-install-v2ray"  target="_blank" rel="noopener"\n    \u003ehttps://github.com/v2fly/alpinelinux-install-v2ray\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003cp\u003eXray 安装参考：\u003ca class="link" href="https://github.com/XTLS/alpinelinux-install-xray"  target="_blank" rel="noopener"\n    \u003ehttps://github.com/XTLS/alpinelinux-install-xray\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003ch2 id="安装-v2raya"\u003e安装 v2rayA\u003c/h2\u003e\n\u003ch3 id="下载二进制可执行文件"\u003e下载二进制可执行文件\u003c/h3\u003e\n\u003cp\u003e根据你的平台，从 \u003ca class="link" href="https://github.com/v2rayA/v2rayA/releases"  target="_blank" rel="noopener"\n    \u003eRelease\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 获取具有 \u003ccode\u003ev2raya_linux_xxx\u003c/code\u003e 字样的无后缀名文件，并将其重命名为 \u003ccode\u003ev2raya\u003c/code\u003e，再把 \u003ccode\u003ev2raya\u003c/code\u003e 移动到 \u003ccode\u003e/usr/local/bin\u003c/code\u003e 并给予可执行权限。\u003c/p\u003e\n\u003cp\u003e示例：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eversion=$(curl -s https://apt.v2raya.org/dists/v2raya/main/binary-amd64/Packages|grep Version|cut -d\' \' -f2)\ncurl -L https://github.com/v2rayA/v2rayA/releases/download/v$version/v2raya_linux_x64_$version --output v2raya\nmv ./v2raya /usr/local/bin/ \u0026amp;\u0026amp; chmod +x /usr/local/bin/v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e可以使用 \u003ccode\u003earch\u003c/code\u003e 命令来查询你的平台架构，比如 x86_64 的架构就需要下载 x64 的版本。\u003c/p\u003e\n\u003ch3 id="创建服务文件"\u003e创建服务文件\u003c/h3\u003e\n\u003cp\u003e在 \u003ccode\u003e/etc/init.d/\u003c/code\u003e 目录下面新建一个名为 \u003ccode\u003ev2raya\u003c/code\u003e 的文本文件，然后编辑，添加内容如下：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003e#!/sbin/openrc-run\n\nname=\u0026quot;v2rayA\u0026quot;\ndescription=\u0026quot;A Linux web GUI client of Project V which supports V2Ray, Xray, SS, SSR, Trojan and Pingtunnel\u0026quot;\n\ncommand=\u0026quot;/usr/local/bin/v2raya\u0026quot;\ncommand_args=\u0026quot;--log-file /var/log/v2raya/access.log\u0026quot;\nerror_log=\u0026quot;/var/log/v2raya/error.log\u0026quot;\npidfile=\u0026quot;/run/${RC_SVCNAME}.pid\u0026quot;\ncommand_background=\u0026quot;yes\u0026quot;\nstart_stop_daemon_args=\u0026quot; -e \u0026quot;V2RAYA_CONFIG=\\\u0026quot;/usr/local/etc/v2raya\u0026quot;\\\u0026quot;\u0026quot;\nrc_ulimit=\u0026quot;-n 30000\u0026quot;\nrc_cgroup_cleanup=\u0026quot;yes\u0026quot;\n\ndepend() {\n    need net\n    after net\n}\n\nstart_pre() {\n   if [ ! -d \u0026quot;/tmp/v2raya/\u0026quot; ]; then \n     mkdir \u0026quot;/tmp/v2raya\u0026quot; \n   fi\n   if [ ! -d \u0026quot;/var/log/v2raya/\u0026quot; ]; then\n   ln -s \u0026quot;/tmp/v2raya/\u0026quot; \u0026quot;/var/log/\u0026quot;\n   fi\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e保存文件，然后给予此文件可执行权限。\u003c/p\u003e\n\u003ch3 id="安装-iptables-模块"\u003e安装 iptables 模块\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eapk add iptables ip6tables\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="运行-v2raya-并开机启动可选"\u003e运行 v2rayA 并开机启动（可选）\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003erc-service v2raya start\nrc-update add v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="查看日志"\u003e查看日志\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003etail -f /var/log/v2raya/access.log\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="其它操作"\u003e其它操作\u003c/h3\u003e\n\u003ch4 id="指定-webdir"\u003e指定 WebDir\u003c/h4\u003e\n\u003cp\u003e在服务文件的 \u003ccode\u003ecommand_args\u003c/code\u003e 中加上一个参数 \u003ccode\u003e--webdir\u003c/code\u003e，然后指定到 Web 文件所在目录即可。比如：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ini"\u003ecommand_args=\u0026quot; --webdir=/usr/local/etc/v2raya/web\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="指定内核"\u003e指定内核\u003c/h4\u003e\n\u003cp\u003e在服务文件的 \u003ccode\u003ecommand_args\u003c/code\u003e 中加上一个参数 \u003ccode\u003e--v2ray-bin\u003c/code\u003e，然后指定到内核所在目录即可。比如：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ini"\u003ecommand_args=\u0026quot; --v2ray-bin=/usr/local/bin/xray\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n'}).add({id:4,href:"https://v2raya.org/docs/prologue/installation/archlinux/",title:"Arch Linux / Manjaro",description:"安装内核和 v2rayA",content:'\u003ch2 id="安装-v2ray-内核--xray-内核"\u003e安装 V2Ray 内核 / Xray 内核\u003c/h2\u003e\n\u003cp\u003e从官方源安装 \u003ccode\u003ev2ray\u003c/code\u003e，或者从 AUR 安装 \u003ccode\u003exray\u003c/code\u003e 或 \u003ccode\u003exray-bin\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id="安装-v2raya"\u003e安装 v2rayA\u003c/h2\u003e\n\u003cp\u003e从 AUR 安装 \u003ccode\u003ev2raya\u003c/code\u003e 或 \u003ccode\u003ev2raya-bin\u003c/code\u003e、\u003ccode\u003ev2raya-git\u003c/code\u003e 即可。\u003c/p\u003e\n'}).add({id:5,href:"https://v2raya.org/docs/prologue/installation/debian/",title:"Debian / Ubuntu",description:"安装内核和 v2rayA",content:'\u003ch2 id="安装-v2ray-内核--xray-内核"\u003e安装 V2Ray 内核 / Xray 内核\u003c/h2\u003e\n\u003ch3 id="v2ray--xray-的官方脚本"\u003eV2Ray / Xray 的官方脚本\u003c/h3\u003e\n\u003cp\u003eV2Ray 安装参考：\u003ca class="link" href="https://github.com/v2fly/fhs-install-v2ray"  target="_blank" rel="noopener"\n    \u003ehttps://github.com/v2fly/fhs-install-v2ray\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003cp\u003eXray 安装参考：\u003ca class="link" href="https://github.com/XTLS/Xray-install"  target="_blank" rel="noopener"\n    \u003ehttps://github.com/XTLS/Xray-install\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003ch3 id="v2raya-提供的镜像脚本推荐"\u003ev2rayA 提供的镜像脚本（推荐）\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecurl -Ls https://mirrors.v2raya.org/go.sh | sudo bash\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e安装后可以关掉服务，因为 v2rayA 不依赖于该 systemd 服务。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl disable v2ray --now ### Xray 需要替换服务为 xray\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="安装-v2raya"\u003e安装 v2rayA\u003c/h2\u003e\n\u003ch3 id="方法一通过软件源安装"\u003e方法一：通过软件源安装\u003c/h3\u003e\n\u003ch4 id="添加公钥"\u003e添加公钥\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ewget -qO - https://apt.v2raya.org/key/public-key.asc | sudo tee /etc/apt/trusted.gpg.d/v2raya.asc\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="添加-v2raya-软件源"\u003e添加 V2RayA 软件源\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eecho \u0026quot;deb https://apt.v2raya.org/ v2raya main\u0026quot; | sudo tee /etc/apt/sources.list.d/v2raya.list\nsudo apt update\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="安装-v2raya-1"\u003e安装 V2RayA\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo apt install v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="方法二手动安装-deb-包"\u003e方法二：手动安装 deb 包\u003c/h3\u003e\n\u003cp\u003e\u003ca class="link" href="https://github.com/v2rayA/v2rayA/releases"  target="_blank" rel="noopener"\n    \u003e下载 deb 包\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n后可以使用 Gdebi、QApt 等图形化工具来安装，也可以使用命令行：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo apt install /path/download/installer_debian_xxx_vxxx.deb ### 自行替换 deb 包所在的实际路径\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="启动-v2raya--设置-v2raya-自动启动"\u003e启动 v2rayA / 设置 v2rayA 自动启动\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e从 1.5 版开始将不再默认为用户启动 v2rayA 及设置开机自动。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e启动 v2rayA\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl start v2raya.service\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e设置开机自动启动\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl enable v2raya.service\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="切换-iptables-为-iptables-nft"\u003e切换 iptables 为 iptables-nft\u003c/h2\u003e\n\u003cp\u003e对于 Debian11 用户来说，iptables 已被弃用。使用 nftables 作为 iptables 的后端以进行适配：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eupdate-alternatives --set iptables /usr/sbin/iptables-nft\nupdate-alternatives --set ip6tables /usr/sbin/ip6tables-nft\nupdate-alternatives --set arptables /usr/sbin/arptables-nft\nupdate-alternatives --set ebtables /usr/sbin/ebtables-nft\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e如果你想切换回 legacy 版本：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eupdate-alternatives --set iptables /usr/sbin/iptables-legacy\nupdate-alternatives --set ip6tables /usr/sbin/ip6tables-legacy\nupdate-alternatives --set arptables /usr/sbin/arptables-legacy\nupdate-alternatives --set ebtables /usr/sbin/ebtables-legacy\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e切换后重启即可。\u003c/p\u003e\n'}).add({id:6,href:"https://v2raya.org/docs/prologue/installation/docker/",title:"Docker",description:"安装内核和 v2rayA",content:'\u003ch3 id="docker-方式"\u003eDocker 方式\u003c/h3\u003e\n\u003cp\u003e使用 docker 命令部署。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# run v2raya\ndocker run -d \\\n  --restart=always \\\n  --privileged \\\n  --network=host \\\n  --name v2raya \\\n  -e V2RAYA_ADDRESS=0.0.0.0:2017 \\\n  -v /lib/modules:/lib/modules:ro \\\n  -v /etc/resolv.conf:/etc/resolv.conf \\\n  -v /etc/v2raya:/etc/v2raya \\\n  mzz2017/v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003chr\u003e\n\u003cp\u003e如果你使用 MacOSX 或其他不支持 host 模式的环境，在该情况下\u003cstrong\u003e无法使用全局透明代理\u003c/strong\u003e，或者你不希望使用全局透明代理，docker 命令会略有不同：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# run v2raya\ndocker run -d \\\n  -p 2017:2017 \\\n  -p 20170-20172:20170-20172 \\\n  --restart=always \\\n  --name v2raya \\\n  -v /etc/v2raya:/etc/v2raya \\\n  mzz2017/v2raya\n\u003c/code\u003e\u003c/pre\u003e\n'}).add({id:7,href:"https://v2raya.org/docs/prologue/installation/openwrt/",title:"OpenWrt",description:"安装内核和 v2rayA",content:'\u003ch2 id="通过-v2raya-自建软件源安装"\u003e通过 v2rayA 自建软件源安装\u003c/h2\u003e\n\u003cp\u003e参考：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca class="link" href="https://github.com/v2raya/v2raya-openwrt"  target="_blank" rel="noopener"\n    \u003ev2rayA for OpenWrt 仓库主页\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca class="link" href="https://osdn.net/projects/v2raya/"  target="_blank" rel="noopener"\n    \u003eOSDN 主页\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e可以使用反向代理了 OSDN 的开源镜像站来加速下载。\u003c/p\u003e\n\u003ch2 id="其它安装方式"\u003e其它安装方式\u003c/h2\u003e\n\u003ch3 id="安装-v2ray-内核--xray-内核"\u003e安装 V2Ray 内核 / Xray 内核\u003c/h3\u003e\n\u003cp\u003e首先安装软件包 \u003ccode\u003eunzip\u003c/code\u003e 与 \u003ccode\u003ewget\u003c/code\u003e，然后从 \u003ca class="link" href="https://github.com/v2fly/v2ray-core/releases"  target="_blank" rel="noopener"\n    \u003eGithub Releases\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 下载 v2ray 内核然后将其保存到 \u003ccode\u003e/usr/bin\u003c/code\u003e，最后给予二进制文件可执行权限。\u003c/p\u003e\n\u003cp\u003e例如：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eopkg update; opkg install unzip wget-ssl\nwget https://github.com/v2fly/v2ray-core/releases/download/v4.40.1/v2ray-linux-64.zip\nunzip -d v2ray-core v2ray-linux-64.zip\ncp v2ray-core/v2ray v2ray-core/v2ctl /usr/bin\nchmod +x /usr/bin/v2ray; chmod +x /usr/bin/v2ctl\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class="notice notice-note" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e\u003cstrong\u003e擦亮眼睛\u003c/strong\u003e\u003cbr\u003e\n格外注意你的 OpenWrt 设备的架构，不要下载到不适用于你设备的版本，否则内核将无法运行。\u003c/p\u003e\u003c/div\u003e\n\u003cp\u003e自 OpenWrt 21.02 开始，Xray 内核可以通过 opkg 安装。\u003c/p\u003e\n\u003ch3 id="安装-v2raya"\u003e安装 v2rayA\u003c/h3\u003e\n\u003ch4 id="方式-1通过-openwrt-官方软件源安装"\u003e方式 1：通过 OpenWrt 官方软件源安装\u003c/h4\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e目前只有 openWrt 最新的 snapshot 版本软件源中含有 v2rayA。使用此版本的用户可以直接从软件源安装。\u003c/p\u003e\u003c/div\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eopkg update\nopkg install v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class="notice notice-note" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e由于目前 openWrt 的软件源中没有 \u003ccode\u003ev2ray-core\u003c/code\u003e, \u003ccode\u003exray-core\u003c/code\u003e 会作为依赖被安装。\n如果你使用 v2ray，则可以手动卸载并忽略依赖警告。\u003c/p\u003e\u003c/div\u003e\n\u003ch4 id="方式-2手动安装-ipk"\u003e方式 2：手动安装 ipk\u003c/h4\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e对于软件源中没有 v2rayA 的用户，可以从 \u003ca href="https://downloads.openwrt.org/snapshots/packages"\u003e此处\u003c/a\u003e 中寻找适合你架构的 ipk 文件进行安装，也可以直接按如下方式手动安装。\u003c/p\u003e\u003c/div\u003e\n\u003ch4 id="方式-3手动安装可执行文件"\u003e方式 3：手动安装可执行文件\u003c/h4\u003e\n\u003cp\u003e从 \u003ca class="link" href="https://github.com/v2rayA/v2rayA/releases"  target="_blank" rel="noopener"\n    \u003eGithub Releases\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 下载最新版本对应处理器架构的二进制文件，然后移动到 \u003ccode\u003e/usr/bin\u003c/code\u003e 并给予执行权限：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ewget https://github.com/v2rayA/v2rayA/releases/download/v$version/v2raya_linux_$arch_$version --output-document v2raya\nmv v2raya /usr/bin/v2raya \u0026amp;\u0026amp; chmod +x /usr/bin/v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="安装依赖包与内核模块"\u003e安装依赖包与内核模块\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eopkg update\nopkg install \\\n    ca-bundle \\\n    ip-full \\\n    iptables-mod-conntrack-extra \\\n    iptables-mod-extra \\\n    iptables-mod-filter \\\n    iptables-mod-tproxy \\\n    kmod-ipt-nat6\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="创建配置文件和服务文件"\u003e创建配置文件和服务文件\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e/etc/config/v2raya\u003c/code\u003e 参考\u003ca class="link" href="https://raw.githubusercontent.com/openwrt/packages/master/net/v2raya/files/v2raya.config"  target="_blank" rel="noopener"\n    \u003e此处\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e/etc/init.d/v2raya\u003c/code\u003e 参考\u003ca class="link" href="https://raw.githubusercontent.com/openwrt/packages/master/net/v2raya/files/v2raya.init"  target="_blank" rel="noopener"\n    \u003e此处\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n。\u003c/p\u003e\n\u003cp\u003e给予此文件可执行权限：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003echmod +x /etc/init.d/v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="其它操作"\u003e其它操作\u003c/h2\u003e\n\u003ch3 id="开启-v2raya-服务"\u003e开启 v2rayA 服务\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003euci set v2raya.config.enabled=\'1\'\nuci commit v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="启动-v2raya"\u003e启动 v2rayA\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e/etc/init.d/v2raya start\n\u003c/code\u003e\u003c/pre\u003e\n'}).add({id:8,href:"https://v2raya.org/docs/prologue/installation/redhat/",title:"RedHat / openSUSE",description:"安装内核和 v2rayA",content:'\u003ch2 id="fedora-34--35--36-以及-centos-stream-8"\u003eFedora 34 / 35 / 36 以及 CentOS Stream 8\u003c/h2\u003e\n\u003ch3 id="添加-copr-源"\u003e添加 copr 源\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo dnf copr enable zhullyb/v2rayA\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="安装-v2ray-内核"\u003e安装 V2Ray 内核\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo dnf install v2ray-core\n\u003c/code\u003e\u003c/pre\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如需Xray内核请参考: \u003ca class="link" href="https://github.com/XTLS/Xray-install"  target="_blank" rel="noopener"\n    \u003ehttps://github.com/XTLS/Xray-install\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id="安装-v2raya"\u003e安装 v2rayA\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo dnf install v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="fedora-silverblue--kinoite"\u003eFedora Silverblue / Kinoite\u003c/h2\u003e\n\u003ch3 id="稳定方法"\u003e稳定方法\u003c/h3\u003e\n\u003cp\u003e切换到合适的路径:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd ~/Downloads\nmkdir v2rayA\ncd v2rayA\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e进入 toolbox:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003etoolbox enter\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e开启 copr 仓库:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo dnf copr enable zhullyb/v2rayA\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e下载软件包:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ednf download --resolve v2ray-core v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e退出到宿主机:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eexit\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e在宿主机上安装软件包:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003erpm-ostree install ./*.rpm\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class="notice notice-warning" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 576 512"\u003e\u003cpath d="M570 440c18 32-5 72-42 72H48c-37 0-60-40-42-72L246 24c19-32 65-32 84 0l240 416zm-282-86a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e警告：注意刚下载的软件包可能在被安装之前被低权限恶意软件替换。\u003c/p\u003e\u003c/div\u003e\n\u003cp\u003e然后，用GUI或者命令行重启电脑:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esystemctl reboot\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e启用并开始运行 \u003ccode\u003ev2rayA\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl enable --now v2raya.service\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e用户应该自己手动更新软件。\u003c/p\u003e\n\u003ch3 id="快速方法"\u003e快速方法\u003c/h3\u003e\n\u003cp\u003eCOPR软件仓库不受Silverblue / Kinoite支持，此方法风险自负。目前此方法似乎可用，但未来相关功能可能被修改或删除。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# 添加copr软件仓库到系统\nsudo curl -Lo /etc/yum.repos.d/_copr:copr.fedorainfracloud.org:zhullyb:v2rayA.repo \\\n  https://copr.fedorainfracloud.org/coprs/zhullyb/v2rayA/repo/fedora-$(rpm -E %fedora)/zhullyb-v2rayA-fedora-$(rpm -E %fedora).repo\n# 不重启的情况下安装软件包\nsudo rpm-ostree install -A v2ray-core v2raya\n# 启用并开始运行服务\nsudo systemctl enable --now v2raya.service\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e软件更新由 \u003ccode\u003erpm-ostree\u003c/code\u003e 自动完成。\u003c/p\u003e\n\u003ch2 id="其他基于-rpm-的操作系统"\u003e其他基于 rpm 的操作系统\u003c/h2\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e此方法可以为 Alma Linux、Rocky Linux、openSUSE、CentOS 7 或其它基于 rpm 软件包管理器的 Linux 发行版安装 v2rayA，前提是你所用的\u003cstrong\u003e发行版使用了 systemd 作为系统管理工具\u003c/strong\u003e。\u003c/p\u003e\u003c/div\u003e\n\u003ch3 id="安装-v2ray-内核--xray-内核"\u003e安装 V2Ray 内核 / Xray 内核\u003c/h3\u003e\n\u003ch4 id="v2ray--xray-的官方脚本"\u003eV2Ray / Xray 的官方脚本\u003c/h4\u003e\n\u003cp\u003eV2Ray 安装参考：\u003ca class="link" href="https://github.com/v2fly/fhs-install-v2ray"  target="_blank" rel="noopener"\n    \u003ehttps://github.com/v2fly/fhs-install-v2ray\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003cp\u003eXray 安装参考：\u003ca class="link" href="https://github.com/XTLS/Xray-install"  target="_blank" rel="noopener"\n    \u003ehttps://github.com/XTLS/Xray-install\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003ch4 id="v2raya-提供的镜像脚本推荐"\u003ev2rayA 提供的镜像脚本（推荐）\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecurl -Ls https://mirrors.v2raya.org/go.sh | sudo bash\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e安装后可以关掉服务，因为v2rayA不依赖于该systemd服务。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl disable v2ray --now ### Xray 需要替换服务为 xray\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="安装-v2raya-1"\u003e安装 v2rayA\u003c/h3\u003e\n\u003cp\u003e\u003ca class="link" href="https://github.com/v2rayA/v2rayA/releases"  target="_blank" rel="noopener"\n    \u003e下载 rpm 包\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n后运行：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo rpm -i /path/download/installer_redhat_xxx_vxxx.rpm ### 自行替换 rpm 包所在的实际路径\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="注意事项"\u003e注意事项\u003c/h2\u003e\n\u003ch3 id="启动-v2raya--设置-v2raya-自动启动"\u003e启动 v2rayA / 设置 v2rayA 自动启动\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e从 1.5 版开始将不再默认为用户启动 v2rayA，也不会默认设置开机自动。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e启动 v2rayA\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl start v2raya.service\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e设置开机自动启动\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl enable v2raya.service\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n'}).add({id:9,href:"https://v2raya.org/docs/prologue/installation/",title:"安装",description:"安装内核和 v2rayA",content:""}).add({id:10,href:"https://v2raya.org/docs/prologue/quick-start/",title:"快速上手",description:"快速上手 v2rayA",content:'\u003ch2 id="准备"\u003e准备\u003c/h2\u003e\n\u003cp\u003e如果你还未安装 v2rayA 或 v2ray-core，请参阅\u003ca class="link" href="/docs/prologue/installation/" \u003e安装\u003c/a\u003e\n一节。如果你需要更换其他的核心，如 Xray-core，请参阅\u003ca class="link" href="/docs/manual/use-other-core/" \u003e使用其他核心\u003c/a\u003e\n一节。\u003c/p\u003e\n\u003ch2 id="开始"\u003e开始\u003c/h2\u003e\n\u003cp\u003e如果你通过 2017 端口 如 \u003ca class="link" href="http://localhost:2017"  target="_blank" rel="noopener"\n    \u003ehttp://localhost:2017\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 无法访问 UI 界面，请检查你的服务是否已经启动。\u003ca class="link" href="https://github.com/v2rayA/v2rayA/issues/237"  target="_blank" rel="noopener"\n    \u003e相关问题\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003cp\u003e接下来进入 UI，本节将介绍 v2rayA 的基本操作流程。\u003c/p\u003e\n\u003ch3 id="创建账号"\u003e创建账号\u003c/h3\u003e\n\u003cp\u003e\u003cimg src="images/create-account.png" alt="创建账号"\u003e\u003c/p\u003e\n\u003cp\u003e在第一次进入页面时，你需要创建一个管理员账号，请妥善保管你的用户名密码，如果遗忘，使用\u003ccode\u003esudo v2raya --reset-password\u003c/code\u003e命令重置。\u003c/p\u003e\n\u003ch3 id="导入节点"\u003e导入节点\u003c/h3\u003e\n\u003cp\u003e\u003cimg src="images/import-servers.png" alt="导入节点"\u003e\u003c/p\u003e\n\u003cp\u003e以创建或导入的方式导入节点，导入支持节点链接、订阅链接、扫描二维码和批量导入等方式。\u003c/p\u003e\n\u003ch3 id="连接节点和启动服务"\u003e连接节点和启动服务\u003c/h3\u003e\n\u003ch4 id="连接节点"\u003e连接节点\u003c/h4\u003e\n\u003cp\u003e\u003cimg src="images/connect1.png" alt="连接节点"\u003e\u003c/p\u003e\n\u003cp\u003e导入成功后，节点将显示在 \u003ccode\u003eSERVER\u003c/code\u003e 或新的标签中。如图是导入了一个订阅后的界面。\u003c/p\u003e\n\u003cp\u003e\u003cimg src="images/connect2.png" alt="连接节点"\u003e\u003c/p\u003e\n\u003cp\u003e切换到该标签页，选择一个或多个节点连接。这里不建议选择过多的节点，6 个以内为佳。\u003c/p\u003e\n\u003cdiv class="notice notice-note" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e截至 2021 年 8 月 27 日，xray 尚未支持基于观测的负载均衡，因此在 v2rayA 中连接多个节点为 v2fly/v2ray-core 所独有。关于负载均衡可参阅\u003ca href="/docs/manual/loadbalance/"\u003e负载均衡\u003c/a\u003e一节。\u003c/p\u003e\n\u003cp\u003e如果你在连接器前需要对节点进行可用性检查，如延时测试，可参考\u003ca href="/docs/manual/manipulation/"\u003e节点和订阅的操作\u003c/a\u003e一节。\u003c/p\u003e\u003c/div\u003e\n\u003ch4 id="启动服务"\u003e启动服务\u003c/h4\u003e\n\u003cp\u003e\u003cimg src="images/connect3.png" alt="启动服务"\u003e\u003c/p\u003e\n\u003cp\u003e在未启动服务时，连接的节点呈现柚红色。我们在左上角点击相应按钮启动服务。\u003c/p\u003e\n\u003cp\u003e\u003cimg src="images/connect4.png" alt="启动服务"\u003e\u003c/p\u003e\n\u003cp\u003e在启动服务后，所连接的节点呈现蓝色，左上角的图标也显示为蓝色的正在运行，代表服务启动成功。\u003c/p\u003e\n\u003ch3 id="配置代理"\u003e配置代理\u003c/h3\u003e\n\u003cp\u003e由于默认情况下 v2rayA 会通过核心开放 20170(socks5), 20171(http), 20172(带分流规则的http) 端口。修改端口可参阅\u003ca class="link" href="/docs/manual/address-port/" \u003e后端地址和入站端口设置\u003c/a\u003e\n一节。\u003c/p\u003e\n\u003cp\u003e如果是需要为局域网中的其他机器提供代理，请在设置中打开“局域网共享”，并检查防火墙开放情况。\u003c/p\u003e\n\u003cp\u003e这里记录三种方式使用代理。\u003c/p\u003e\n\u003ch4 id="透明代理"\u003e透明代理\u003c/h4\u003e\n\u003cp\u003e\u003cimg src="images/tproxy.png" alt="透明代理"\u003e\u003c/p\u003e\n\u003cp\u003e这种方法是 v2rayA 推荐的方法。它相比于其他方法具有诸多优势，v2rayA 可以一键开启透明代理，为\u003cstrong\u003e几乎所有程序\u003c/strong\u003e提供代理服务。\u003c/p\u003e\n\u003cp\u003e在设置中选择透明代理的分流方式，以及实现方式，然后保存即可。具体细节可参阅\u003ca class="link" href="/docs/manual/transparent-proxy/" \u003e透明代理\u003c/a\u003e\n一节。\u003c/p\u003e\n\u003cp\u003e注意，如需选择 GFWList，需要下载对应的规则库，请点击右上角的更新以完成下载。\u003c/p\u003e\n\u003ch4 id="系统代理"\u003e系统代理\u003c/h4\u003e\n\u003cp\u003e系统代理可为\u003cstrong\u003e主动支持代理的程序\u003c/strong\u003e提供代理服务。在不同的桌面环境中设置的位置不尽相同，请通过搜索引擎自行搜索。\u003c/p\u003e\n\u003ch4 id="switchyomega"\u003eSwitchyOmega\u003c/h4\u003e\n\u003cp\u003eSwitchyOmega 等浏览器插件可为\u003cstrong\u003e浏览器\u003c/strong\u003e提供代理服务。具体方法请通过搜索引擎自行搜索。\u003c/p\u003e\n\u003ch2 id="总结"\u003e总结\u003c/h2\u003e\n\u003cp\u003e本节提供了 v2rayA 最基本的使用方法，v2rayA 还有着更多丰富的功能，请参阅“手册”和“高级应用”章节以进行更多的了解。\u003c/p\u003e\n'}).add({id:11,href:"https://v2raya.org/docs/manual/import/",title:"节点和订阅的导入",description:"v2rayA 节点和订阅的导入",content:'\u003ch2 id="requirements"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eDoks uses npm to centralize dependency management, making it \u003ca class="link" href="/docs/help/how-to-update/" \u003eeasy to update\u003c/a\u003e\n resources, build tooling, plugins, and build scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload and install \u003ca class="link" href="https://nodejs.org/"  target="_blank" rel="noopener"\n    \u003eNode.js\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n (it includes npm) for your platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="start-a-new-doks-project"\u003eStart a new Doks project\u003c/h2\u003e\n\u003cp\u003eCreate a new site, change directories, install dependencies, and start development server.\u003c/p\u003e\n\u003ch3 id="create-a-new-site"\u003eCreate a new site\u003c/h3\u003e\n\u003cp\u003eDoks is available as a child theme, and a starter theme:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the Doks child theme, if you do \u003cstrong\u003enot\u003c/strong\u003e plan to customize a lot, and/or need future Doks updates.\u003c/li\u003e\n\u003cli\u003eUse the Doks starter theme, if you plan to customize a lot, and/or do \u003cstrong\u003enot\u003c/strong\u003e need future Doks updates.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot quite sure? Use the Doks child theme.\u003c/p\u003e\n\u003ch4 id="doks-child-theme"\u003eDoks child theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io-child-theme.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="doks-starter-theme"\u003eDoks starter theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="change-directories"\u003eChange directories\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="install-dependencies"\u003eInstall dependencies\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="start-development-server"\u003eStart development server\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDoks will start the Hugo development webserver accessible by default at \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e. Saved changes will live reload in the browser.\u003c/p\u003e\n\u003ch2 id="other-commands"\u003eOther commands\u003c/h2\u003e\n'}).add({id:12,href:"https://v2raya.org/docs/manual/manipulation/",title:"节点和订阅的操作",description:"v2rayA 节点和订阅的操作",content:'\u003ch2 id="requirements"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eDoks uses npm to centralize dependency management, making it \u003ca class="link" href="/docs/help/how-to-update/" \u003eeasy to update\u003c/a\u003e\n resources, build tooling, plugins, and build scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload and install \u003ca class="link" href="https://nodejs.org/"  target="_blank" rel="noopener"\n    \u003eNode.js\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n (it includes npm) for your platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="start-a-new-doks-project"\u003eStart a new Doks project\u003c/h2\u003e\n\u003cp\u003eCreate a new site, change directories, install dependencies, and start development server.\u003c/p\u003e\n\u003ch3 id="create-a-new-site"\u003eCreate a new site\u003c/h3\u003e\n\u003cp\u003eDoks is available as a child theme, and a starter theme:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the Doks child theme, if you do \u003cstrong\u003enot\u003c/strong\u003e plan to customize a lot, and/or need future Doks updates.\u003c/li\u003e\n\u003cli\u003eUse the Doks starter theme, if you plan to customize a lot, and/or do \u003cstrong\u003enot\u003c/strong\u003e need future Doks updates.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot quite sure? Use the Doks child theme.\u003c/p\u003e\n\u003ch4 id="doks-child-theme"\u003eDoks child theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io-child-theme.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="doks-starter-theme"\u003eDoks starter theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="change-directories"\u003eChange directories\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="install-dependencies"\u003eInstall dependencies\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="start-development-server"\u003eStart development server\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDoks will start the Hugo development webserver accessible by default at \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e. Saved changes will live reload in the browser.\u003c/p\u003e\n\u003ch2 id="other-commands"\u003eOther commands\u003c/h2\u003e\n'}).add({id:13,href:"https://v2raya.org/docs/manual/rule/",title:"预设的路由分流规则",description:"v2rayA 预设的路由分流规则的介绍",content:'\u003ch2 id="requirements"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eDoks uses npm to centralize dependency management, making it \u003ca class="link" href="/docs/help/how-to-update/" \u003eeasy to update\u003c/a\u003e\n resources, build tooling, plugins, and build scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload and install \u003ca class="link" href="https://nodejs.org/"  target="_blank" rel="noopener"\n    \u003eNode.js\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n (it includes npm) for your platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="start-a-new-doks-project"\u003eStart a new Doks project\u003c/h2\u003e\n\u003cp\u003eCreate a new site, change directories, install dependencies, and start development server.\u003c/p\u003e\n\u003ch3 id="create-a-new-site"\u003eCreate a new site\u003c/h3\u003e\n\u003cp\u003eDoks is available as a child theme, and a starter theme:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the Doks child theme, if you do \u003cstrong\u003enot\u003c/strong\u003e plan to customize a lot, and/or need future Doks updates.\u003c/li\u003e\n\u003cli\u003eUse the Doks starter theme, if you plan to customize a lot, and/or do \u003cstrong\u003enot\u003c/strong\u003e need future Doks updates.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot quite sure? Use the Doks child theme.\u003c/p\u003e\n\u003ch4 id="doks-child-theme"\u003eDoks child theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io-child-theme.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="doks-starter-theme"\u003eDoks starter theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="change-directories"\u003eChange directories\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="install-dependencies"\u003eInstall dependencies\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="start-development-server"\u003eStart development server\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDoks will start the Hugo development webserver accessible by default at \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e. Saved changes will live reload in the browser.\u003c/p\u003e\n\u003ch2 id="other-commands"\u003eOther commands\u003c/h2\u003e\n'}).add({id:14,href:"https://v2raya.org/docs/manual/routinga/",title:"RoutingA 自定义路由分流",description:"RoutingA 的介绍",content:'\u003cp\u003e你可在“设置-规则端口的分流模式”中选择“RoutingA”来开启规则端口的自定义路由分流。如果你想为透明代理设置自定义路由分流，需要在上述设置的前提下，再将“设置-透明代理”选为“与规则端口所选模式一致”来启用。\u003c/p\u003e\n\u003ch2 id="示例"\u003e示例\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# 自定义入站 inbound，支持http, socks\ninbound:httpauthin=http(address: 0.0.0.0, port: 1081, user: user1, pass: user1pass, user:user2, pass:user2pass)\ninbound:socksauthin=socks(address: 0.0.0.0, port: 1082, user: 123, pass: 123)\ninbound:sockslocalin=socks(address: 127.0.0.1, port: 1080)\ninbound:sniffing_socks=socks(address: 127.0.0.1, port: 1080, sniffing: http, sniffing: tls)\ninbound:sniffing_http=http(address: 127.0.0.1, port: 1081, sniffing: \'http, tls\')\n\n# 自定义出站 outbound，支持http, socks, freedom\noutbound:httpout=http(address: 127.0.0.1, port: 8080, user: \'my-username\', pass: \'my-password\')\noutbound:socksout=socks(address: 127.0.0.1, port: 10800, user: \u0026quot;my-username\u0026quot;, pass: \u0026quot;my-password\u0026quot;)\noutbound:special=freedom(domainStrategy: AsIs, redirect: \u0026quot;127.0.0.1:3366\u0026quot;, userLevel: 0)\n\n# 设置默认outbound，不设置则默认为proxy （该选项只作用于默认入站）\ndefault: httpout\n\n# 预设三个outbounds: proxy, block, direct\n\n# 域名规则\ndomain(domain: v2raya.org) -\u0026gt; socksout\ndomain(full: dns.google) -\u0026gt; proxy\ndomain(contains: facebook) -\u0026gt; proxy\ndomain(regexp: \\.goo.*\\.com$) -\u0026gt; proxy\ndomain(geosite:category-ads) -\u0026gt; block\ndomain(geosite:cn)-\u0026gt;direct\n\n# 目的IP规则\nip(8.8.8.8) -\u0026gt; direct\nip(101.97.0.0/16) -\u0026gt; direct\nip(geoip:private) -\u0026gt; direct\n\n# 源IP规则\nsource(192.168.0.0/24) -\u0026gt; proxy\nsource(192.168.50.0/24) -\u0026gt; direct\n\n# 目的端口规则\nport(80) -\u0026gt; direct\nport(10080-30000) -\u0026gt; direct\n\n# 源端口规则\nsourcePort(38563) -\u0026gt; direct\nsourcePort(10080-30000) -\u0026gt; direct\n\n# 多域名规则\ndomain(contains: google, domain: www.twitter.com, domain: v2raya.org) -\u0026gt; proxy\n# 多IP规则\nip(geoip:cn, geoip:private) -\u0026gt; direct\nip(9.9.9.9, 223.5.5.5) -\u0026gt; direct\nsource(192.168.0.6, 192.168.0.10, 192.168.0.15) -\u0026gt; direct\n\n# inbound 入站规则\ninboundTag(httpauthin, socksauthin) -\u0026gt; direct\ninboundTag(sockslocalin) -\u0026gt; special\n\n# 同时满足规则\nip(geoip:cn) \u0026amp;\u0026amp; port(80) \u0026amp;\u0026amp; user(mzz2017@tuta.io) -\u0026gt; direct\nip(8.8.8.8) \u0026amp;\u0026amp; network(tcp, udp) \u0026amp;\u0026amp; port(1-1023, 8443) -\u0026gt; proxy\nip(1.1.1.1) \u0026amp;\u0026amp; protocol(http) \u0026amp;\u0026amp; source(10.0.0.1, 172.20.0.0/16) -\u0026gt; direct\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e更多概念请查看 \u003ca class="link" href="https://www.v2ray.com/chapter_02/03_routing.html"  target="_blank" rel="noopener"\n    \u003eV2Ray-Routing\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e引号可省略，但包含特殊符号时不可省，如 \u003ccode\u003e,\u003c/code\u003e  \u003ccode\u003e\'\u003c/code\u003e \u003ccode\u003e\u0026quot;\u003c/code\u003e 和  \u003ccode\u003e)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e暂不支持转义字符 \u003ccode\u003e\\\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e越早书写的路由规则将被优先匹配\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="常见用法"\u003e常见用法\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# 大陆白名单模式\ndefault: proxy\n# 国外域名即使有中国IP也要优先代理\n# 注意，LoyalsoldierSite.dat 文件需要预先通过 v2rayA 下载\n# 或者手动去它的仓库下载，然后保存为 LoyalsoldierSite.dat\n# 仓库地址：https://github.com/Loyalsoldier/v2ray-rules-dat\n# domain(ext:\u0026quot;LoyalsoldierSite.dat:geolocation-!cn\u0026quot;)-\u0026gt;proxy\ndomain(geosite:geolocation-!cn)-\u0026gt;proxy\n# scholar sites\ndomain(geosite:google-scholar)-\u0026gt;proxy\ndomain(geosite:category-scholar-!cn, geosite:category-scholar-cn)-\u0026gt;direct\ndomain(geosite:cn)-\u0026gt;direct\nip(geoip:hk,geoip:mo)-\u0026gt;proxy\nip(geoip:private, geoip:cn)-\u0026gt;direct\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# GFWList模式\ndefault: direct\n# 学术网站\ndomain(geosite:google-scholar)-\u0026gt;proxy\ndomain(geosite:category-scholar-!cn, geosite:category-scholar-cn)-\u0026gt;direct\n# domain(ext:\u0026quot;LoyalsoldierSite.dat:gfw\u0026quot;, ext:\u0026quot;LoyalsoldierSite.dat:greatfire\u0026quot;)-\u0026gt;proxy\ndomain(geosite:geolocation-!cn)-\u0026gt;proxy\n# Telegram\n# 下面这条注释掉的规则需要来自 Loyalsoldiser 的 IP 文件\n# 仓库地址 https://github.com/Loyalsoldier/geoip/\n# 下载后可将其保存为 LoyalsoldierIP.dat\n# ip(ext:\u0026quot;LoyalsoldierIP.dat:telegram\u0026quot;)-\u0026gt;proxy\nip(\u0026quot;91.105.192.0/23\u0026quot;,\u0026quot;91.108.4.0/22\u0026quot;,\u0026quot;91.108.8.0/21\u0026quot;,\u0026quot;91.108.16.0/21\u0026quot;,\u0026quot;91.108.56.0/22\u0026quot;,\u0026quot;95.161.64.0/20\u0026quot;,\u0026quot;149.154.160.0/20\u0026quot;,\u0026quot;185.76.151.0/24\u0026quot;,\u0026quot;2001:67c:4e8::/48\u0026quot;,\u0026quot;2001:b28:f23c::/47\u0026quot;,\u0026quot;2001:b28:f23f::/48\u0026quot;,\u0026quot;2a0a:f280:203::/48\u0026quot;)-\u0026gt;proxy\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# 使用自定义DAT文件（需要将其放入正确目录）\n# https://github.com/onplus/v2ray-SiteDAT\ndomain(ext:\u0026quot;yourdatfile.dat:yourtag\u0026quot;)-\u0026gt;direct\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# 带认证和路由的端口\ninbound: socksauthin=socks(address: 0.0.0.0, port: 1080, user: 123, pass: 123)\ninbound: httpauthin=http(address: 0.0.0.0, port: 1081, user: 123, pass: 123)\n\ninboundTag(socksauthin, httpauthin)-\u0026gt;direct\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# 不同inbound流量走不同的outbound\ninbound: crawlerin = http(address:127.0.0.1,port:30001)\ninbound: crawlerin2 = http(address:127.0.0.1,port:30002)\ninbound: crawlerin3 = http(address:127.0.0.1,port:30003)\ninbound: crawlerin4 = http(address:127.0.0.1,port:30004)\n\ninboundTag(crawlerin)-\u0026gt;crawler\ninboundTag(crawlerin2)-\u0026gt;crawler2\ninboundTag(crawlerin3)-\u0026gt;crawler3\ninboundTag(crawlerin4)-\u0026gt;crawler4\n\n\u003c/code\u003e\u003c/pre\u003e\n'}).add({id:15,href:"https://v2raya.org/docs/manual/transparent-proxy/",title:"透明代理",description:"v2rayA 透明代理的介绍",content:'\u003ch2 id="requirements"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eDoks uses npm to centralize dependency management, making it \u003ca class="link" href="/docs/help/how-to-update/" \u003eeasy to update\u003c/a\u003e\n resources, build tooling, plugins, and build scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload and install \u003ca class="link" href="https://nodejs.org/"  target="_blank" rel="noopener"\n    \u003eNode.js\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n (it includes npm) for your platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="start-a-new-doks-project"\u003eStart a new Doks project\u003c/h2\u003e\n\u003cp\u003eCreate a new site, change directories, install dependencies, and start development server.\u003c/p\u003e\n\u003ch3 id="create-a-new-site"\u003eCreate a new site\u003c/h3\u003e\n\u003cp\u003eDoks is available as a child theme, and a starter theme:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the Doks child theme, if you do \u003cstrong\u003enot\u003c/strong\u003e plan to customize a lot, and/or need future Doks updates.\u003c/li\u003e\n\u003cli\u003eUse the Doks starter theme, if you plan to customize a lot, and/or do \u003cstrong\u003enot\u003c/strong\u003e need future Doks updates.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot quite sure? Use the Doks child theme.\u003c/p\u003e\n\u003ch4 id="doks-child-theme"\u003eDoks child theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io-child-theme.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="doks-starter-theme"\u003eDoks starter theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="change-directories"\u003eChange directories\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="install-dependencies"\u003eInstall dependencies\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="start-development-server"\u003eStart development server\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDoks will start the Hugo development webserver accessible by default at \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e. Saved changes will live reload in the browser.\u003c/p\u003e\n\u003ch2 id="other-commands"\u003eOther commands\u003c/h2\u003e\n'}).add({id:16,href:"https://v2raya.org/docs/manual/prevent-dns-spoofing/",title:"防止 DNS 污染",description:"v2rayA 防止 DNS 污染的介绍",content:'\u003ch2 id="requirements"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eDoks uses npm to centralize dependency management, making it \u003ca class="link" href="/docs/help/how-to-update/" \u003eeasy to update\u003c/a\u003e\n resources, build tooling, plugins, and build scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload and install \u003ca class="link" href="https://nodejs.org/"  target="_blank" rel="noopener"\n    \u003eNode.js\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n (it includes npm) for your platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="start-a-new-doks-project"\u003eStart a new Doks project\u003c/h2\u003e\n\u003cp\u003eCreate a new site, change directories, install dependencies, and start development server.\u003c/p\u003e\n\u003ch3 id="create-a-new-site"\u003eCreate a new site\u003c/h3\u003e\n\u003cp\u003eDoks is available as a child theme, and a starter theme:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the Doks child theme, if you do \u003cstrong\u003enot\u003c/strong\u003e plan to customize a lot, and/or need future Doks updates.\u003c/li\u003e\n\u003cli\u003eUse the Doks starter theme, if you plan to customize a lot, and/or do \u003cstrong\u003enot\u003c/strong\u003e need future Doks updates.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot quite sure? Use the Doks child theme.\u003c/p\u003e\n\u003ch4 id="doks-child-theme"\u003eDoks child theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io-child-theme.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="doks-starter-theme"\u003eDoks starter theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="change-directories"\u003eChange directories\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="install-dependencies"\u003eInstall dependencies\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="start-development-server"\u003eStart development server\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDoks will start the Hugo development webserver accessible by default at \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e. Saved changes will live reload in the browser.\u003c/p\u003e\n\u003ch2 id="other-commands"\u003eOther commands\u003c/h2\u003e\n'}).add({id:17,href:"https://v2raya.org/docs/manual/intranet-sharing/",title:"局域网共享",description:"v2rayA 局域网共享的介绍",content:'\u003ch2 id="requirements"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eDoks uses npm to centralize dependency management, making it \u003ca class="link" href="/docs/help/how-to-update/" \u003eeasy to update\u003c/a\u003e\n resources, build tooling, plugins, and build scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload and install \u003ca class="link" href="https://nodejs.org/"  target="_blank" rel="noopener"\n    \u003eNode.js\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n (it includes npm) for your platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="start-a-new-doks-project"\u003eStart a new Doks project\u003c/h2\u003e\n\u003cp\u003eCreate a new site, change directories, install dependencies, and start development server.\u003c/p\u003e\n\u003ch3 id="create-a-new-site"\u003eCreate a new site\u003c/h3\u003e\n\u003cp\u003eDoks is available as a child theme, and a starter theme:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the Doks child theme, if you do \u003cstrong\u003enot\u003c/strong\u003e plan to customize a lot, and/or need future Doks updates.\u003c/li\u003e\n\u003cli\u003eUse the Doks starter theme, if you plan to customize a lot, and/or do \u003cstrong\u003enot\u003c/strong\u003e need future Doks updates.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot quite sure? Use the Doks child theme.\u003c/p\u003e\n\u003ch4 id="doks-child-theme"\u003eDoks child theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io-child-theme.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="doks-starter-theme"\u003eDoks starter theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="change-directories"\u003eChange directories\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="install-dependencies"\u003eInstall dependencies\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="start-development-server"\u003eStart development server\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDoks will start the Hugo development webserver accessible by default at \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e. Saved changes will live reload in the browser.\u003c/p\u003e\n\u003ch2 id="other-commands"\u003eOther commands\u003c/h2\u003e\n'}).add({id:18,href:"https://v2raya.org/docs/manual/special-mode/",title:"特殊模式",description:"v2rayA 特殊模式的介绍",content:'\u003ch2 id="requirements"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eDoks uses npm to centralize dependency management, making it \u003ca class="link" href="/docs/help/how-to-update/" \u003eeasy to update\u003c/a\u003e\n resources, build tooling, plugins, and build scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload and install \u003ca class="link" href="https://nodejs.org/"  target="_blank" rel="noopener"\n    \u003eNode.js\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n (it includes npm) for your platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="start-a-new-doks-project"\u003eStart a new Doks project\u003c/h2\u003e\n\u003cp\u003eCreate a new site, change directories, install dependencies, and start development server.\u003c/p\u003e\n\u003ch3 id="create-a-new-site"\u003eCreate a new site\u003c/h3\u003e\n\u003cp\u003eDoks is available as a child theme, and a starter theme:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the Doks child theme, if you do \u003cstrong\u003enot\u003c/strong\u003e plan to customize a lot, and/or need future Doks updates.\u003c/li\u003e\n\u003cli\u003eUse the Doks starter theme, if you plan to customize a lot, and/or do \u003cstrong\u003enot\u003c/strong\u003e need future Doks updates.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot quite sure? Use the Doks child theme.\u003c/p\u003e\n\u003ch4 id="doks-child-theme"\u003eDoks child theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io-child-theme.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="doks-starter-theme"\u003eDoks starter theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="change-directories"\u003eChange directories\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="install-dependencies"\u003eInstall dependencies\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="start-development-server"\u003eStart development server\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDoks will start the Hugo development webserver accessible by default at \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e. Saved changes will live reload in the browser.\u003c/p\u003e\n\u003ch2 id="other-commands"\u003eOther commands\u003c/h2\u003e\n'}).add({id:19,href:"https://v2raya.org/docs/manual/tfo-reuse/",title:"TCP Fast Open 和多路复用",description:"v2rayA 特殊模式的介绍",content:'\u003ch2 id="requirements"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eDoks uses npm to centralize dependency management, making it \u003ca class="link" href="/docs/help/how-to-update/" \u003eeasy to update\u003c/a\u003e\n resources, build tooling, plugins, and build scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload and install \u003ca class="link" href="https://nodejs.org/"  target="_blank" rel="noopener"\n    \u003eNode.js\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n (it includes npm) for your platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="start-a-new-doks-project"\u003eStart a new Doks project\u003c/h2\u003e\n\u003cp\u003eCreate a new site, change directories, install dependencies, and start development server.\u003c/p\u003e\n\u003ch3 id="create-a-new-site"\u003eCreate a new site\u003c/h3\u003e\n\u003cp\u003eDoks is available as a child theme, and a starter theme:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the Doks child theme, if you do \u003cstrong\u003enot\u003c/strong\u003e plan to customize a lot, and/or need future Doks updates.\u003c/li\u003e\n\u003cli\u003eUse the Doks starter theme, if you plan to customize a lot, and/or do \u003cstrong\u003enot\u003c/strong\u003e need future Doks updates.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot quite sure? Use the Doks child theme.\u003c/p\u003e\n\u003ch4 id="doks-child-theme"\u003eDoks child theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io-child-theme.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="doks-starter-theme"\u003eDoks starter theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="change-directories"\u003eChange directories\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="install-dependencies"\u003eInstall dependencies\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="start-development-server"\u003eStart development server\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDoks will start the Hugo development webserver accessible by default at \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e. Saved changes will live reload in the browser.\u003c/p\u003e\n\u003ch2 id="other-commands"\u003eOther commands\u003c/h2\u003e\n'}).add({id:20,href:"https://v2raya.org/docs/manual/auto-pull/",title:"自动更新订阅和拓展规则库",description:"v2rayA 自动更新订阅和拓展规则库的介绍",content:'\u003ch2 id="requirements"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eDoks uses npm to centralize dependency management, making it \u003ca class="link" href="/docs/help/how-to-update/" \u003eeasy to update\u003c/a\u003e\n resources, build tooling, plugins, and build scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload and install \u003ca class="link" href="https://nodejs.org/"  target="_blank" rel="noopener"\n    \u003eNode.js\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n (it includes npm) for your platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="start-a-new-doks-project"\u003eStart a new Doks project\u003c/h2\u003e\n\u003cp\u003eCreate a new site, change directories, install dependencies, and start development server.\u003c/p\u003e\n\u003ch3 id="create-a-new-site"\u003eCreate a new site\u003c/h3\u003e\n\u003cp\u003eDoks is available as a child theme, and a starter theme:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the Doks child theme, if you do \u003cstrong\u003enot\u003c/strong\u003e plan to customize a lot, and/or need future Doks updates.\u003c/li\u003e\n\u003cli\u003eUse the Doks starter theme, if you plan to customize a lot, and/or do \u003cstrong\u003enot\u003c/strong\u003e need future Doks updates.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot quite sure? Use the Doks child theme.\u003c/p\u003e\n\u003ch4 id="doks-child-theme"\u003eDoks child theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io-child-theme.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="doks-starter-theme"\u003eDoks starter theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="change-directories"\u003eChange directories\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="install-dependencies"\u003eInstall dependencies\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="start-development-server"\u003eStart development server\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDoks will start the Hugo development webserver accessible by default at \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e. Saved changes will live reload in the browser.\u003c/p\u003e\n\u003ch2 id="other-commands"\u003eOther commands\u003c/h2\u003e\n'}).add({id:21,href:"https://v2raya.org/docs/manual/ext/",title:"预设拓展规则库",description:"v2rayA 拓展规则库的介绍",content:'\u003ch2 id="requirements"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eDoks uses npm to centralize dependency management, making it \u003ca class="link" href="/docs/help/how-to-update/" \u003eeasy to update\u003c/a\u003e\n resources, build tooling, plugins, and build scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload and install \u003ca class="link" href="https://nodejs.org/"  target="_blank" rel="noopener"\n    \u003eNode.js\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n (it includes npm) for your platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="start-a-new-doks-project"\u003eStart a new Doks project\u003c/h2\u003e\n\u003cp\u003eCreate a new site, change directories, install dependencies, and start development server.\u003c/p\u003e\n\u003ch3 id="create-a-new-site"\u003eCreate a new site\u003c/h3\u003e\n\u003cp\u003eDoks is available as a child theme, and a starter theme:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the Doks child theme, if you do \u003cstrong\u003enot\u003c/strong\u003e plan to customize a lot, and/or need future Doks updates.\u003c/li\u003e\n\u003cli\u003eUse the Doks starter theme, if you plan to customize a lot, and/or do \u003cstrong\u003enot\u003c/strong\u003e need future Doks updates.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot quite sure? Use the Doks child theme.\u003c/p\u003e\n\u003ch4 id="doks-child-theme"\u003eDoks child theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io-child-theme.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="doks-starter-theme"\u003eDoks starter theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="change-directories"\u003eChange directories\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="install-dependencies"\u003eInstall dependencies\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="start-development-server"\u003eStart development server\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDoks will start the Hugo development webserver accessible by default at \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e. Saved changes will live reload in the browser.\u003c/p\u003e\n\u003ch2 id="other-commands"\u003eOther commands\u003c/h2\u003e\n'}).add({id:22,href:"https://v2raya.org/docs/manual/address-port/",title:"后端地址和入站端口设置",description:"v2rayA 后端地址和入站端口设置的介绍",content:'\u003ch2 id="requirements"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eDoks uses npm to centralize dependency management, making it \u003ca class="link" href="/docs/help/how-to-update/" \u003eeasy to update\u003c/a\u003e\n resources, build tooling, plugins, and build scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload and install \u003ca class="link" href="https://nodejs.org/"  target="_blank" rel="noopener"\n    \u003eNode.js\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n (it includes npm) for your platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="start-a-new-doks-project"\u003eStart a new Doks project\u003c/h2\u003e\n\u003cp\u003eCreate a new site, change directories, install dependencies, and start development server.\u003c/p\u003e\n\u003ch3 id="create-a-new-site"\u003eCreate a new site\u003c/h3\u003e\n\u003cp\u003eDoks is available as a child theme, and a starter theme:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the Doks child theme, if you do \u003cstrong\u003enot\u003c/strong\u003e plan to customize a lot, and/or need future Doks updates.\u003c/li\u003e\n\u003cli\u003eUse the Doks starter theme, if you plan to customize a lot, and/or do \u003cstrong\u003enot\u003c/strong\u003e need future Doks updates.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot quite sure? Use the Doks child theme.\u003c/p\u003e\n\u003ch4 id="doks-child-theme"\u003eDoks child theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io-child-theme.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="doks-starter-theme"\u003eDoks starter theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="change-directories"\u003eChange directories\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="install-dependencies"\u003eInstall dependencies\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="start-development-server"\u003eStart development server\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDoks will start the Hugo development webserver accessible by default at \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e. Saved changes will live reload in the browser.\u003c/p\u003e\n\u003ch2 id="other-commands"\u003eOther commands\u003c/h2\u003e\n'}).add({id:23,href:"https://v2raya.org/docs/manual/multiple-outbound/",title:"多出站设计",description:"v2rayA 多出站设计的介绍",content:'\u003ch2 id="requirements"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eDoks uses npm to centralize dependency management, making it \u003ca class="link" href="/docs/help/how-to-update/" \u003eeasy to update\u003c/a\u003e\n resources, build tooling, plugins, and build scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload and install \u003ca class="link" href="https://nodejs.org/"  target="_blank" rel="noopener"\n    \u003eNode.js\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n (it includes npm) for your platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="start-a-new-doks-project"\u003eStart a new Doks project\u003c/h2\u003e\n\u003cp\u003eCreate a new site, change directories, install dependencies, and start development server.\u003c/p\u003e\n\u003ch3 id="create-a-new-site"\u003eCreate a new site\u003c/h3\u003e\n\u003cp\u003eDoks is available as a child theme, and a starter theme:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the Doks child theme, if you do \u003cstrong\u003enot\u003c/strong\u003e plan to customize a lot, and/or need future Doks updates.\u003c/li\u003e\n\u003cli\u003eUse the Doks starter theme, if you plan to customize a lot, and/or do \u003cstrong\u003enot\u003c/strong\u003e need future Doks updates.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot quite sure? Use the Doks child theme.\u003c/p\u003e\n\u003ch4 id="doks-child-theme"\u003eDoks child theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io-child-theme.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="doks-starter-theme"\u003eDoks starter theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="change-directories"\u003eChange directories\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="install-dependencies"\u003eInstall dependencies\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="start-development-server"\u003eStart development server\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDoks will start the Hugo development webserver accessible by default at \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e. Saved changes will live reload in the browser.\u003c/p\u003e\n\u003ch2 id="other-commands"\u003eOther commands\u003c/h2\u003e\n'}).add({id:24,href:"https://v2raya.org/docs/manual/loadbalance/",title:"负载均衡",description:"v2rayA 负载均衡的介绍",content:'\u003ch2 id="requirements"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eDoks uses npm to centralize dependency management, making it \u003ca class="link" href="/docs/help/how-to-update/" \u003eeasy to update\u003c/a\u003e\n resources, build tooling, plugins, and build scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload and install \u003ca class="link" href="https://nodejs.org/"  target="_blank" rel="noopener"\n    \u003eNode.js\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n (it includes npm) for your platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="start-a-new-doks-project"\u003eStart a new Doks project\u003c/h2\u003e\n\u003cp\u003eCreate a new site, change directories, install dependencies, and start development server.\u003c/p\u003e\n\u003ch3 id="create-a-new-site"\u003eCreate a new site\u003c/h3\u003e\n\u003cp\u003eDoks is available as a child theme, and a starter theme:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the Doks child theme, if you do \u003cstrong\u003enot\u003c/strong\u003e plan to customize a lot, and/or need future Doks updates.\u003c/li\u003e\n\u003cli\u003eUse the Doks starter theme, if you plan to customize a lot, and/or do \u003cstrong\u003enot\u003c/strong\u003e need future Doks updates.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot quite sure? Use the Doks child theme.\u003c/p\u003e\n\u003ch4 id="doks-child-theme"\u003eDoks child theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io-child-theme.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="doks-starter-theme"\u003eDoks starter theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="change-directories"\u003eChange directories\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="install-dependencies"\u003eInstall dependencies\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="start-development-server"\u003eStart development server\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDoks will start the Hugo development webserver accessible by default at \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e. Saved changes will live reload in the browser.\u003c/p\u003e\n\u003ch2 id="other-commands"\u003eOther commands\u003c/h2\u003e\n'}).add({id:25,href:"https://v2raya.org/docs/manual/hook/",title:"生命周期钩子",description:"生命周期钩子介绍与示例",content:'\u003cp\u003e使用 v2rayA 的 \u003ccode\u003e--transparent-hook\u003c/code\u003e 参数以及对应的环境变量 \u003ccode\u003eV2RAYA_TRANSPARENT_HOOK\u003c/code\u003e 可在透明代理启动前、启动后，停止前、停止后运行用户提供的程序，用户可在自定义程序中添加、删除或修改 iptables 规则、sysctl 规则或执行任意其他命令，以达成高级用法。v2rayA 参数的传递请参考 \u003ca class="link" href="/docs/manual/variable-argument/#%e5%a6%82%e4%bd%95%e8%ae%be%e7%bd%ae" \u003e环境变量和命令行参数\u003c/a\u003e\n 一节中的说明。与其对应的，\u003ccode\u003e--core-hook\u003c/code\u003e 可在 v2ray-core 启动前、启动后，停止前、停止后运行用户提供的程序。\u003c/p\u003e\n\u003cp\u003e除了用户需要给 v2rayA 提供的一个参数外，v2rayA 还会在执行用户自定义程序时传入参数以告知上下文信息。用户可在自定义程序中解析传入的参数，以判断当前 v2rayA 的透明代理类型 (tproxy, redirect, system_proxy)，以及当前所处阶段 (pre-start, post-start, pre-stop, post-stop)。\u003c/p\u003e\n\u003cp\u003e下表表示了 v2rayA 对应钩子类型在运行用户自定义程序时支持传入的参数。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e钩子类型/参数\u003c/th\u003e\n\u003cth\u003e\u0026ndash;stage\u003c/th\u003e\n\u003cth\u003e\u0026ndash;transparent-type\u003c/th\u003e\n\u003cth\u003e\u0026ndash;v2raya-confdir\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u0026ndash;transparent-hook\u003c/td\u003e\n\u003ctd\u003e✓\u003c/td\u003e\n\u003ctd\u003e✓\u003c/td\u003e\n\u003ctd\u003e✓\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u0026ndash;core-hook\u003c/td\u003e\n\u003ctd\u003e✓\u003c/td\u003e\n\u003ctd\u003e✗\u003c/td\u003e\n\u003ctd\u003e✓\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e下面给出 bash 脚本作为 \u003ccode\u003e--transparent-hook\u003c/code\u003e 的自定义程序的例子，该例子将解析透明代理类型到 \u003ccode\u003e$TYPE\u003c/code\u003e 变量，以及当前所处阶段到 \u003ccode\u003e$STAGE\u003c/code\u003e 变量，最后将上下文变量打印出来：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e#!/bin/bash\n\n# parse the arguments\nfor i in \u0026quot;$@\u0026quot;; do\n  case $i in\n    --transparent-type=*)\n      TYPE=\u0026quot;${i#*=}\u0026quot;\n      shift\n      ;;\n    --stage=*)\n      STAGE=\u0026quot;${i#*=}\u0026quot;\n      shift\n      ;;\n    --v2raya-confidr=*)\n      CONFDIR=\u0026quot;${i#*=}\u0026quot;\n      shift\n      ;;\n    -*|--*)\n      echo \u0026quot;Unknown option $i\u0026quot;\n      shift\n      ;;\n    *)\n      ;;\n  esac\ndone\n\n# print $TYPE, $STAGE and $CONFDIR\necho \u0026quot;Transparent Type = ${TYPE}\u0026quot;\necho \u0026quot;Stage            = ${STAGE}\u0026quot;\necho \u0026quot;Config Directory = ${CONFDIR}\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e有了上下文变量，用户就可以根据需求进行编写操作了。\u003c/p\u003e\n\u003cp\u003e为了验证这段程序的有效性，用户只需将脚本保存并通过 \u003ccode\u003echmod +x example.sh\u003c/code\u003e 赋予执行权限后将脚本路径作为 \u003ccode\u003e--transparent-hook\u003c/code\u003e 传递给 v2rayA 即可，在透明代理执行前后输出结果会作为 v2rayA 日志进行输出。\u003c/p\u003e\n\u003cp\u003e该参数并不限于使用 bash 脚本，你也可传入具有执行权限的 python 脚本或其他可执行程序的文件路径。\u003c/p\u003e\n\u003cdiv class="notice notice-warning" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 576 512"\u003e\u003cpath d="M570 440c18 32-5 72-42 72H48c-37 0-60-40-42-72L246 24c19-32 65-32 84 0l240 416zm-282-86a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e请务必使得传入的脚本仅 root 具有写权限，以防止越权执行漏洞。\u003c/p\u003e\u003c/div\u003e\n'}).add({id:26,href:"https://v2raya.org/docs/manual/use-other-core/",title:"使用其他核心",description:"v2rayA 使用其他核心的介绍",content:'\u003cp\u003e如不明确指定，v2rayA 在启动后会在 \u003ccode\u003e$PATH\u003c/code\u003e 中依次查找 v2ray 和 xray 命令，因此确保使用命令\u003ccode\u003ecommand -v v2ray\u003c/code\u003e及\u003ccode\u003ecommand -v xray\u003c/code\u003e能有正确的输出即可。\u003c/p\u003e\n\u003cp\u003ev2rayA 会优先使用 v2ray，其次是 xray。如果你的 v2ray 或 xray 不在 \u003ccode\u003e$PATH\u003c/code\u003e 中，或你想使用其他的核心，可在环境变量或命令行参数中明确指定。参考\u003ca class="link" href="/docs/manual/variable-argument/#%e5%a6%82%e4%bd%95%e8%ae%be%e7%bd%ae" \u003e环境变量和命令行参数\u003c/a\u003e\n一节中的说明。\u003c/p\u003e\n'}).add({id:27,href:"https://v2raya.org/docs/manual/variable-argument/",title:"环境变量和命令行参数",description:"v2rayA 环境变量和命令行参数的介绍",content:'\u003ch2 id="介绍"\u003e介绍\u003c/h2\u003e\n\u003ch3 id="环境变量"\u003e环境变量\u003c/h3\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e本节所列变量有可能已过时，可通过 \u003ccode\u003ev2raya --help\u003c/code\u003e 查看支持的参数，环境变量与之对应。\u003c/p\u003e\u003c/div\u003e\n\u003cp\u003e\u003ccode\u003eV2RAYA_ADDRESS\u003c/code\u003e: 监听地址 (默认 \u0026ldquo;0.0.0.0:2017\u0026rdquo;)\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eV2RAYA_CONFIG\u003c/code\u003e: v2rayA 配置文件目录 (默认 \u0026ldquo;/etc/v2raya\u0026rdquo;)\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eV2RAYA_V2RAY_BIN\u003c/code\u003e: v2ray 可执行文件路径。留空将自动检测。可修改为 v2ray 分支如 xray 等文件路径。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eV2RAYA_V2RAY_CONFDIR\u003c/code\u003e: 附加的 v2ray 配置文件目录，该目录中的 v2ray 配置文件会与 v2rayA 生成的配置文件进行组合。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eV2RAYA_WEBDIR\u003c/code\u003e: v2rayA 前端 GUI 文件目录，如不指定，将使用二进制内嵌 GUI 文件。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eV2RAYA_PLUGINLISTENPORT\u003c/code\u003e: v2rayA 内部插件端口 (默认 32346)\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eV2RAYA_FORCE_IPV6_ON\u003c/code\u003e: 跳过检查，强制启用 IPv6 的支持。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eV2RAYA_PASSCHECKROOT\u003c/code\u003e: 跳过 root 权限检测，确认你有 root 权限而 v2rayA 判断出错时使用，或者使用非 root 用户时使用。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eV2RAYA_VERBOSE\u003c/code\u003e: 详细日志模式，混合打印 v2ray-core 和 v2rayA 的运行日志。将在之后的版本被遗弃。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eV2RAYA_RESET_PASSWORD\u003c/code\u003e: 重设密码。\u003c/p\u003e\n\u003ch3 id="命令行参数"\u003e命令行参数\u003c/h3\u003e\n\u003cp\u003e与环境变量对应，详情使用下列命令查看：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ev2raya --help\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="如何设置"\u003e如何设置\u003c/h2\u003e\n\u003cp\u003e下面将以指定\u003ccode\u003eV2RAYA_V2RAY_BIN\u003c/code\u003e为xray为例，介绍各个环境下的设置方法。\u003c/p\u003e\n\u003ch3 id="systemd-管理的-v2raya"\u003esystemd 管理的 v2rayA\u003c/h3\u003e\n\u003cp\u003e使用 apt 等包管理器，或直接使用安装包进行安装的，一般都为这种方式。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e新建文件夹 \u003ccode\u003e/etc/systemd/system/v2raya.service.d\u003c/code\u003e，然后新建一个 \u003ccode\u003exray.conf\u003c/code\u003e 的文件，添加以下内容：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-conf"\u003e[Service]\nEnvironment=\u0026quot;V2RAYA_V2RAY_BIN=/usr/local/bin/xray\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e注意检查 Xray 的路径是否正确。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e重载服务：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo systemctl daemon-reload \u0026amp;\u0026amp; sudo systemctl restart v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id="openwrt"\u003eOpenWrt\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e针对已适配选项：\u003c/p\u003e\n\u003cp\u003e详细可配置列表参见 \u003ccode\u003e/etc/config/v2raya\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003euci set v2raya.config.v2ray_bin=\'/usr/bin/xray\'\nuci commit v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e针对未适配选项（nightly / advanced 用户）：\u003c/p\u003e\n\u003cp\u003e更改 \u003ccode\u003e/etc/init.d/v2raya\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-conf"\u003estart_service() {\n   config_load \u0026quot;$CONF\u0026quot;\n\n   is_enabled \u0026quot;config\u0026quot; \u0026quot;enabled\u0026quot; || exit 1\n\n   procd_open_instance \u0026quot;$CONF\u0026quot;\n   procd_set_param command \u0026quot;$PROG\u0026quot;\n   procd_set_param env XDG_DATA_HOME=\u0026quot;/usr/share\u0026quot;\n\n   # 追加命令行参数\n   procd_append_param command --v2ray-bin=\u0026quot;/usr/bin/xray\u0026quot;\n   # 追加环境变量\n   procd_append_param env V2RAYA_V2RAY_BIN=\u0026quot;/usr/bin/xray\u0026quot;\n\n   --- cut here ---\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e重载服务：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e/etc/init.d/v2raya restart\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="alpine"\u003eAlpine\u003c/h3\u003e\n\u003cp\u003e修改 \u003ccode\u003e/etc/init.d/v2raya\u003c/code\u003e中的\u003ccode\u003ecommand_args\u003c/code\u003e，例如：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-conf"\u003e#!/sbin/openrc-run\n\nname=\u0026quot;v2rayA\u0026quot;\ndescription=\u0026quot;A Linux web GUI client of Project V which supports V2Ray, Xray, SS, SSR, Trojan and Pingtunnel\u0026quot;\ncommand=\u0026quot;/usr/local/bin/v2raya\u0026quot;\ncommand_args=\u0026quot;--config=/usr/local/etc/v2raya --v2ray-bin=/usr/local/bin/xray\u0026quot;\npidfile=\u0026quot;/run/${RC_SVCNAME}.pid\u0026quot;\ncommand_background=\u0026quot;yes\u0026quot;\n\ndepend() {\n    need net\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e再重启服务即可。\u003c/p\u003e\n\u003ch3 id="docker"\u003eDocker\u003c/h3\u003e\n\u003cp\u003e使用\u003ccode\u003e-e\u003c/code\u003e指定环境变量，下例修改监听端口为2021：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# run v2raya\ndocker run -d \\\n  --restart=always \\\n  --privileged \\\n  --network=host \\\n  --name v2raya \\\n  -e V2RAYA_ADDRESS=0.0.0.0:2021 \\\n  -v /lib/modules:/lib/modules \\\n  -v /etc/resolv.conf:/etc/resolv.conf \\\n  -v /etc/v2raya:/etc/v2raya \\\n  mzz2017/v2raya\n\u003c/code\u003e\u003c/pre\u003e\n'}).add({id:28,href:"https://v2raya.org/docs/advanced-application/noroot/",title:"无 ROOT 权限运行 v2rayA",description:"v2rayA 无 ROOT 权限运行的介绍",content:'\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e以非 ROOT 权限运行 v2rayA 将无法使用部分功能，例如透明代理。\u003c/p\u003e\n\u003cp\u003e然而如果你希望以 ROOT 权限运行，且已拥有 ROOT 权限而 v2rayA 判断错误，可使用 \u003ccode\u003e--passcheckroot\u003c/code\u003e 跳过 root 权限检查。\u003c/p\u003e\u003c/div\u003e\n\u003cp\u003e一般地，使用环境变量 \u003ccode\u003eV2RAYA_LITE\u003c/code\u003e 或命令行参数 \u003ccode\u003e--lite\u003c/code\u003e 以使用非 ROOT 权限启动 v2rayA。\u003c/p\u003e\n\u003cp\u003e如果你使用 systemd，可通过控制用户服务 \u003ccode\u003ev2raya-lite.service\u003c/code\u003e 以本用户运行，例如：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esystemctl --user enable --now v2raya-lite.service\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e注意，该服务启动后，v2rayA 默认占据 2017 端口。因此如果已有其他实例在 2017 监听，需要先将其关闭，例如：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esystemctl disable --now v2raya.service\n\u003c/code\u003e\u003c/pre\u003e\n'}).add({id:29,href:"https://v2raya.org/docs/advanced-application/multiple-outbound-routing/",title:"多节点分流",description:"v2rayA 多节点分流的介绍",content:'\u003ch2 id="介绍"\u003e介绍\u003c/h2\u003e\n\u003cp\u003ev2rayA 支持设置多个出站组（outbound），通过 RoutingA 可以设置根据不同的入站、源地址、目的地址等选择不同的出站，以实现各种复杂功能。\u003c/p\u003e\n\u003ch2 id="流媒体分流"\u003e流媒体分流\u003c/h2\u003e\n\u003cp\u003e流媒体分流即访问不同的流媒体时，使用不同的服务器节点。例如观看奈非时使用可观看奈非的服务器节点，而正常冲浪时使用更快速的 IPLC 节点，BT 下载时使用流量更多的荷兰服务器节点。\u003c/p\u003e\n\u003cp\u003e下面以 Netflix 和 Disney 为例讲述分流方法：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e在 v2rayA 的左上方新增两个出站，名为 Netflix 和 Disney。此时我们有三个出站：proxy、Netflix、Disney。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e依次选择出站，在每个出站的界面中连接特定的服务器节点。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e将“透明代理”选为“与规则端口所选模式一致”；将“规则端口的分流模式”选为“RoutingA”。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class="notice notice-note" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e如果你不使用透明代理则无需设置透明代理，只需将“规则端口的分流模式”选为“RoutingA”即可。而后使用规则端口进行代理上网。\u003c/p\u003e\u003c/div\u003e\n\u003col start="4"\u003e\n\u003cli\u003e\n\u003cp\u003e在 RoutingA 设置中，在靠前位置插入如下规则：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-python"\u003edomain(geosite: netflix) -\u0026gt; Netflix\ndomain(geosite: disney) -\u0026gt; Disney\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e保存并应用，并在 v2rayA 管理界面左上角启动 v2ray-core。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e此时，正常上网流量将使用 \u003ccode\u003eproxy\u003c/code\u003e 组，Netflix 使用 \u003ccode\u003eNetflix\u003c/code\u003e 组，而 Disney 使用 \u003ccode\u003eDisney\u003c/code\u003e 组。\u003c/p\u003e\n\u003cp\u003e如果你想使 BT 下载使用某一出站，可参考 \u003ca class="link" href="/docs/advanced-application/specify-container-proxy/" \u003eBT 下载直连\u003c/a\u003e\n 的方法，将其中的出站名由 \u003ccode\u003edirect\u003c/code\u003e 改为特定出站即可。\u003c/p\u003e\n\u003ch2 id="爬虫分流"\u003e爬虫分流\u003c/h2\u003e\n\u003cp\u003e爬虫往往需要使用多个代理 IP 加速爬取速度。例如我们需要设置 5 个 IP 组，名为 Crawler1、Crawler2、Crawler3、Crawler4、Crawler5，通过 5 个不同的入站端口分别使用这 5 个 IP 组出口。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e在 v2rayA 的左上方新增 5 个出站，名为 Crawler1、Crawler2、Crawler3、Crawler4、Crawler5。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e依次选择出站，在每个出站的界面中连接特定的服务器节点。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e将“规则端口的分流模式”选为“RoutingA”。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e在 RoutingA 设置中，在靠前位置插入如下规则：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-python"\u003einbound: crawlerin1 = http(address:127.0.0.1, port:30001)\ninbound: crawlerin2 = http(address:127.0.0.1, port:30002)\ninbound: crawlerin3 = http(address:127.0.0.1, port:30003)\ninbound: crawlerin4 = http(address:127.0.0.1, port:30004)\ninbound: crawlerin5 = http(address:127.0.0.1, port:30005)\n\ninboundTag(crawlerin1)-\u0026gt;Crawler1\ninboundTag(crawlerin2)-\u0026gt;Crawler2\ninboundTag(crawlerin3)-\u0026gt;Crawler3\ninboundTag(crawlerin4)-\u0026gt;Crawler4\ninboundTag(crawlerin5)-\u0026gt;Crawler5\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e保存并应用，并在 v2rayA 管理界面左上角启动 v2ray-core。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e在爬虫应用中使用 30001-30005 端口以选择不同的 IP 出口。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class="notice notice-note" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e截至 2021-10-12，尽管 v2ray-core 支持 random 的负载均衡方式，但由于该方式并不结合观测结果以保证节点的可用性，导致随机到的节点有服务不可用的风险，因此 v2rayA 暂不支持 random 的负载均衡。\u003c/p\u003e\u003c/div\u003e\n'}).add({id:30,href:"https://v2raya.org/docs/advanced-application/specify-container-proxy/",title:"指定 Docker 容器代理",description:"v2rayA 指定 Docker 容器代理的介绍",content:'\u003ch2 id="指定-docker-容器代理"\u003e指定 Docker 容器代理\u003c/h2\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e此方法只能适用于 v2rayA 与要控制路由的 Docker 容器在同一台机器的情况。\u003c/p\u003e\u003c/div\u003e\n\u003ch3 id="透明代理使用-redirect-模式"\u003e透明代理使用 redirect 模式\u003c/h3\u003e\n\u003cp\u003e正如 \u003ca class="link" href="/docs/advanced-application/pass-bt/" \u003eBT 下载直连\u003c/a\u003e\n 中所列方法，我们可以控制每一个桥接的 Docker 容器的路由。\u003c/p\u003e\n\u003cp\u003e当 BT 应用运行在 Docker 时，默认的网络模式使用桥接模式（\u0026ndash;network=bridge），此时容器会单独获得一个 IP 地址。而 Docker 的默认桥接网络为 \u003ccode\u003e172.17.0.0/16\u003c/code\u003e，容器会在该地址段中获取一个 IP 使用。如果我们想让所有桥接容器走直连，而特定容器走代理，可使用 RoutingA 进行控制，例如：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-python"\u003e# 将规则插入到较前位置\nsource(172.17.0.213) -\u0026gt; proxy\nsource(172.17.0.0/16) -\u0026gt; direct\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e上述规则使得 \u003ccode\u003e172.17.0.213\u003c/code\u003e 走代理，而 \u003ccode\u003e172.17.0.0/16\u003c/code\u003e 段直连。\u003c/p\u003e\n\u003cp\u003e当 docker 服务重启时，容器的 IP 地址可能会发生变化，因此需要固定容器的 IP 地址，方法参见 \u003ca class="link" href="https://stackoverflow.com/questions/27937185/assign-static-ip-to-docker-container"  target="_blank" rel="noopener"\n    \u003eStackOverflow\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 上的讨论。\u003c/p\u003e\n\u003ch3 id="透明代理使用-tproxy-模式"\u003e透明代理使用 tproxy 模式\u003c/h3\u003e\n\u003cp\u003e由于一些限制，在此模式下，所有桥接容器默认直连，因此要走代理的容器需要将网络设为 \u003ccode\u003ehost\u003c/code\u003e，即在容器启动时使用 \u003ccode\u003e--network host\u003c/code\u003e 参数。\u003c/p\u003e\n\u003cp\u003e注意，\u003ccode\u003ehost\u003c/code\u003e 模式下该容器将无法进行端口映射，容器内部监听的端口将直接监听在宿主上，容易引起端口冲突。\u003c/p\u003e\n'}).add({id:31,href:"https://v2raya.org/docs/advanced-application/pass-bt/",title:"BT 下载直连",description:"v2rayA BT 下载直连介绍",content:'\u003ch2 id="方法-1为-bt-应用设置单独的直连端口"\u003e方法 1：为 BT 应用设置单独的直连端口\u003c/h2\u003e\n\u003cp\u003e大多数 BT 应用可以设置 HTTP/Socks 代理，此时为 v2rayA 开放一个直连端口，将所有 BT 流量通过该端口即可。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e将“透明代理”选为“与规则端口所选模式一致”；将“规则端口的分流模式”选为“RoutingA”。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e使用 RoutingA 开放一个直连端口：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-python"\u003einbound: socks_direct = socks(address: 0.0.0.0, port: 30000)\n# 下条规则需要插入靠前位置\ninboundTag(socks_direct) -\u0026gt; direct\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e将 BT 应用的代理设置为上述直连端口。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id="方法-2将-bt-应用运行在-docker-中"\u003e方法 2：将 BT 应用运行在 Docker 中\u003c/h2\u003e\n\u003cp\u003e与 \u003ca class="link" href="/docs/advanced-application/specify-container-proxy/" \u003e指定 Docker 容器代理\u003c/a\u003e\n 中所列方法类似，我们可以使得在 Docker 容器中的 BT 应用直连。\u003c/p\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e此方法只能适用于 v2rayA 与要直连的 BT 应用在同一台机器的情况。\u003c/p\u003e\u003c/div\u003e\n\u003ch3 id="当使用-tproxy-模式时"\u003e当使用 tproxy 模式时\u003c/h3\u003e\n\u003cp\u003e由于透明代理实现方式为 tproxy 时，暂时无法代理桥接模式的 docker 容器，因此使用 tproxy 时所有容器都会直连，以达到目的。\u003c/p\u003e\n\u003ch3 id="当使用-redirect-模式时"\u003e当使用 redirect 模式时\u003c/h3\u003e\n\u003cp\u003e透明代理使用 redirect 模式可代理 Docker 容器。下面使用一些技巧来使得特定 BT 容器直连。\u003c/p\u003e\n\u003cp\u003e当 BT 应用运行在 Docker 时，默认的网络模式使用桥接模式（\u003ccode\u003e--network=bridge\u003c/code\u003e），此时容器会单独获得一个 IP 地址，使用 RoutingA 设置源 IP 地址直连即可。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e将 BT 应用运行于 docker 容器。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e获得容器的 IP 地址，例如：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003edocker exec \u0026lt;container_id or container_name\u0026gt; ip addr\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e其中容器 ID 可通过 \u003ccode\u003edocker ps\u003c/code\u003e 取得。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e将“透明代理”选为“与规则端口所选模式一致”；将“规则端口的分流模式”选为“RoutingA”。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e在 RoutingA 中，在较为靠前的位置插入一条规则，配置源 IP 地址直连，例如：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-python"\u003esource(172.17.0.212) -\u0026gt; direct\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e当 docker 服务重启时，容器的 IP 地址可能会发生变化，因此需要固定容器的 IP 地址，方法参见 \u003ca class="link" href="https://stackoverflow.com/questions/27937185/assign-static-ip-to-docker-container"  target="_blank" rel="noopener"\n    \u003eStackOverflow\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 上的讨论。\u003c/p\u003e\n\u003ch2 id="方法3利用生命周期钩子使特定用户或组直连"\u003e方法3：利用生命周期钩子使特定用户或组直连\u003c/h2\u003e\n\u003cp\u003e下面给出利用生命周期钩子修改透明代理规则，使得以 v2raya-skip 组运行的程序直连的例子，该方法可使得特定程序的所有流量均不经过 v2ray-core。生命周期钩子的介绍见 \u003ca class="link" href="/docs/manual/hook/" \u003e生命周期钩子\u003c/a\u003e\n 一节。\u003c/p\u003e\n\u003cp\u003e注意，由于 docker 容器中的用户和组与宿主中的用户和组是隔离的，因此该方法对 docker 容器内的程序并不能生效。\u003c/p\u003e\n\u003cp\u003e首先创建用户组：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo groupadd v2raya-skip\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e而后，编写如下脚本，将其存储于 \u003ccode\u003e/etc/v2raya/tproxy-hook.sh\u003c/code\u003e ：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e#!/bin/bash\n\n# parse the arguments\nfor i in \u0026quot;$@\u0026quot;; do\n  case $i in\n    --transparent-type=*)\n      TYPE=\u0026quot;${i#*=}\u0026quot;\n      shift\n      ;;\n    --stage=*)\n      STAGE=\u0026quot;${i#*=}\u0026quot;\n      shift\n      ;;\n    -*|--*)\n      echo \u0026quot;Unknown option $i\u0026quot;\n      shift\n      ;;\n    *)\n      ;;\n  esac\ndone\n\n\ncase \u0026quot;$STAGE\u0026quot; in\npost-start)\n  # at the post-start stage\n  # we first check the $TYPE so we know which table should we insert into\n  if [ \u0026quot;$TYPE\u0026quot; = \u0026quot;tproxy\u0026quot; ]; then\n    TABLE=mangle\n  elif [ \u0026quot;$TYPE\u0026quot; = \u0026quot;redirect\u0026quot; ]; then\n    TABLE=nat\n  else\n    echo \u0026quot;unexpected transparent type: ${TYPE}\u0026quot;\n    exit 1\n  fi\n  # print what we are excuting and exit if it fails\n  set -ex\n  # insert the iptables rules for ipv4 and ipv6\n  iptables -t \u0026quot;$TABLE\u0026quot; -I TP_OUT -m owner --gid-owner v2raya-skip -j RETURN\n  ip6tables -t \u0026quot;$TABLE\u0026quot; -I TP_OUT -m owner --gid-owner v2raya-skip -j RETURN\n  ;;\npre-stop)\n  # we do nothing here because the TP_OUT chain will be flushed automatically by v2rayA.\n  # we can also do it manually.\n  ;;\n*)\n  ;;\nesac\n\nexit 0\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e赋予可执行权限：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo chmod +x /etc/v2raya/tproxy-hook.sh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e启动 v2raya 时添加透明代理生命周期钩子，添加参数 \u003ccode\u003e--transparent-hook /etc/v2raya/tproxy-hook.sh\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e使用指定组启动需要绕过的程序，以 curl 为例：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# 使用 sg\nsudo sg v2raya-skip \'curl ip.sb\'\n# 或使用 su\nsudo su -g v2raya-skip -c \'curl ip.sb\'\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e同理，可使用类似命令启动 BT 下载程序，以达到不经过 v2ray-core 的直连效果。\u003c/p\u003e\n\u003cp\u003e使得使用指定用户启动的程序直连的方法思路同上，将 \u003ccode\u003e--gid-owner\u003c/code\u003e 换为 \u003ccode\u003e--uid-owner\u003c/code\u003e 即可。\u003c/p\u003e\n'}).add({id:32,href:"https://v2raya.org/docs/advanced-application/unblock-netease-cloud/",title:"解锁网易云灰色歌曲",description:"v2rayA 解锁网易云灰色歌曲介绍",content:'\u003cp\u003e本案例将会向你展示如何使用 \u003ca class="link" href="https://github.com/nondanee/UnblockNeteaseMusic"  target="_blank" rel="noopener"\n    \u003enondanee/UnblockNeteaseMusic\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 解锁网易云音乐的灰色歌曲。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e下载由 nondanee/UnblockNeteaseMusic 项目的作者提供的\u003ca class="link" href="https://cdn.jsdelivr.net/gh/nondanee/UnblockNeteaseMusic@latest/ca.crt"  target="_blank" rel="noopener"\n    \u003e证书\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e信任此证书。信任的办法取决于你使用的 Linux 发行版，(\u003cstrong\u003earchlinux/manjaro\u003c/strong\u003e 可以使用 \u003ccode\u003esudo trust anchor --store ca.crt\u003c/code\u003e) \u003ca class="link" href="https://superuser.com/questions/437330/how-do-you-add-a-certificate-authority-ca-to-ubuntu"  target="_blank" rel="noopener"\n    \u003e[ubuntu可以点我]\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n，其他发行版自己搜一下啦\u003c/p\u003e\n\u003cp\u003e如果你想让在 LAN 网络的苹果设备也生效, 在 Safari 打开\u003ca class="link" href="https://cdn.jsdelivr.net/gh/nondanee/UnblockNeteaseMusic@latest/ca.crt"  target="_blank" rel="noopener"\n    \u003e证书\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n并在\u003ccode\u003e设置-通用-描述文件\u003c/code\u003e中安装。安装成功后，在\u003ccode\u003e设置-通用-关于本机-证书信任设置\u003c/code\u003e中信任此证书\u003c/p\u003e\n\u003cp\u003e\u003cdel\u003eAndroid devices need to modify the network setting you connect (such as WLAN and APN) and set proxy to port 20172. Or if you have root privileges, you can try adding the certificate to \u003cstrong\u003eSYSTEM\u003c/strong\u003e root cert list (not USER one) \u003ca class="link" href="https://github.com/nondanee/UnblockNeteaseMusic/issues/423#issuecomment-596621392"  target="_blank" rel="noopener"\n    \u003eUnblockNeteaseMusic#423\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/del\u003e\u003c/p\u003e\n\u003cp\u003eFortunately, no additional operations need to do for Android devices.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e安装 nondanee/unblockneteasemusic:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003edocker run -d -p 18080:8080 --restart always --name unblock nondanee/unblockneteasemusic -p 8080:8081 -e https://music.163.com\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e设置 RoutingA:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e基于大陆白名单模式：\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eoutbound: unblockneteasemusic = http(address:\u0026quot;127.0.0.1\u0026quot;, port:\u0026quot;18080\u0026quot;)\n\ndefault: proxy\n\n# 下一行是为安卓设备准备的, 如果你不使用安卓设备，请你移除下一行，否则这将有可能影响到听歌记录。\ndomain(regexp:clientlog\\d*.music.163.com)-\u0026gt;block\ndomain(domain:163.com,domain:netease.com) \u0026amp;\u0026amp; source(172.16.0.0/12)-\u0026gt;direct\ndomain(domain:163.com,domain:netease.com)-\u0026gt;unblockneteasemusic\n\ndomain(geosite:geolocation-!cn)-\u0026gt;proxy\ndomain(geosite:google-scholar)-\u0026gt;proxy\ndomain(geosite:cn, geosite:category-scholar-!cn, geosite:category-scholar-cn)-\u0026gt;direct\nip(geoip:hk,geoip:mo)-\u0026gt;proxy\nip(geoip:private, geoip:cn)-\u0026gt;direct\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003e基于GFWList模式:\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eoutbound: unblockneteasemusic = http(address:\u0026quot;127.0.0.1\u0026quot;, port:\u0026quot;18080\u0026quot;)\n\ndefault: direct\n\n# 下一行是为安卓设备准备的, 如果你不使用安卓设备，请你移除下一行，否则这将有可能影响到听歌记录。\ndomain(regexp:clientlog\\d*.music.163.com)-\u0026gt;block\ndomain(domain:163.com,domain:netease.com) \u0026amp;\u0026amp; source(172.16.0.0/12)-\u0026gt;direct\ndomain(domain:163.com,domain:netease.com)-\u0026gt;unblockneteasemusic\n\ndomain(geosite:geolocation-!cn)-\u0026gt;proxy\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e将透明代理设置为 \u0026ldquo;与规则端口所选模式一致\u0026rdquo;。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e完成啦！\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n'}).add({id:33,href:"https://v2raya.org/docs/advanced-application/synology-transparent-proxy/",title:"群晖实现透明代理",description:"群晖实现透明代理的配置方法",content:'\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e安装也是采用Docker的方式，所以首先确认你的群晖系统是否支持Docker\u003c/p\u003e\u003c/div\u003e\n\u003ch2 id="补齐缺失的iptables模块"\u003e补齐缺失的iptables模块\u003c/h2\u003e\n\u003cp\u003e按照 \u003ca class="link" href="/docs/prologue/installation/docker/" \u003eDocker安装\u003c/a\u003e\n 之后，启用redirect或tproxy透明代理模式，类似旁路由模式，就会遇到iptables缺失相关的报错。群晖系统是一个定制版Linux系统，透明代理需要的iptables相关模块并没有包含，所以解决方案就是补齐缺失的iptables模块，具体参考 \u003ca class="link" href="https://github.com/sjtuross/syno-iptables"  target="_blank" rel="noopener"\n    \u003esyno-iptables\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 下载安装预编译模块或者自编译。\u003c/p\u003e\n\u003ch2 id="加载缺失的模块并启动容器"\u003e加载缺失的模块并启动容器\u003c/h2\u003e\n\u003cp\u003e在v2rayA启动时，为了确保所需的内核模块已经加载，可以覆盖默认的entrypoint为一个脚本，负责加载模块然后启动v2rayA，以下为docker run示例。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003edocker run -d \\\n  --restart=always \\\n  --privileged \\\n  --network=host \\\n  --name v2raya \\\n  -e V2RAYA_ADDRESS=0.0.0.0:2017 \\\n  -v /lib/modules:/lib/modules \\\n  -v /etc/resolv.conf:/etc/resolv.conf \\\n  -v /volume1/docker/v2raya-config:/etc/v2raya \\\n  --entrypoint /etc/v2raya/bootstrap.sh \\\n  mzz2017/v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e替换 /volume1/docker/v2raya-config 为你自己挂载的配置目录\u003c/p\u003e\u003c/div\u003e\n\u003cp\u003e以DS3617xs 6.2.3-25426为例，bootstrap.sh文件内容如下，同样存放于配置目录中。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e#!/bin/sh\ninsmod /lib/modules/nfnetlink.ko \u0026amp;\u0026gt; /dev/null\ninsmod /lib/modules/ip_set.ko \u0026amp;\u0026gt; /dev/null\ninsmod /lib/modules/ip_set_hash_ip.ko \u0026amp;\u0026gt; /dev/null\ninsmod /lib/modules/xt_set.ko \u0026amp;\u0026gt; /dev/null\ninsmod /lib/modules/ip_set_hash_net.ko \u0026amp;\u0026gt; /dev/null\ninsmod /lib/modules/xt_mark.ko \u0026amp;\u0026gt; /dev/null\ninsmod /lib/modules/xt_connmark.ko \u0026amp;\u0026gt; /dev/null\ninsmod /lib/modules/nf_tproxy_core.ko \u0026amp;\u0026gt; /dev/null\ninsmod /lib/modules/xt_TPROXY.ko \u0026amp;\u0026gt; /dev/null\ninsmod /lib/modules/iptable_mangle.ko \u0026amp;\u0026gt; /dev/null\nv2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class="notice notice-info" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 512 512"\u003e\u003cpath d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e不同群晖系统所需的内核模块可能不完全一样，具体参考 \u003ca href="https://github.com/sjtuross/syno-iptables"\u003esyno-iptables\u003c/a\u003e 自行调整\u003c/p\u003e\u003c/div\u003e\n'}).add({id:34,href:"https://v2raya.org/docs/advanced-application/advanced-dns/",title:"高级 DNS 设置",description:"v2rayA 高级 DNS 设置介绍",content:'\u003ch2 id="常规用法"\u003e常规用法\u003c/h2\u003e\n\u003cp\u003e默认的防止 DNS 污染规则通常使用预设的 DNS 公共服务器，高级用户可使用高级 DNS 设置进行自定义。\u003c/p\u003e\n\u003cp\u003e规则如下：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-python"\u003e223.5.5.5 -\u0026gt; direct\ntcp://119.29.29.29 -\u0026gt; proxy\nhttps://dns.google -\u0026gt; proxy\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e通常使用第一条规则进行 DNS 查询，当查询失败时将使用第二条，其后亦然。\u003c/p\u003e\n\u003cp\u003e箭头右方的“出站名”表示使用左侧的 DNS 进行查询时使用的出站出口。\u003c/p\u003e\n\u003ch2 id="使用其他-dns-客户端"\u003e使用其他 DNS 客户端\u003c/h2\u003e\n\u003cp\u003e有时我们希望使用其他 DNS 客户端，例如 AdGuard 的 dnsproxy 接管本机的 DNS 请求。本节介绍如何做到这点。本节默认你已开启透明代理。\u003c/p\u003e\n\u003ch3 id="当使用-redirect-模式时"\u003e当使用 redirect 模式时\u003c/h3\u003e\n\u003cp\u003e当“透明代理实现方式”使用 redirect 时，将“防止DNS污染”设为关闭即可。\u003c/p\u003e\n\u003cp\u003e将“防止DNS污染”设为关闭后，v2ray-core 将不会设置 DNS 入站，从而避免 DNS 冲突。\u003c/p\u003e\n\u003cp\u003eredirect 模式下 UDP 流量不会经过 v2ray-core，而 TCP 流量会正常进行路由分流。因此其他 DNS 客户端的非常规 DNS 查询（非 \u003ccode\u003eDNS over TCP\u003c/code\u003e 和 \u003ccode\u003eDNS over UDP\u003c/code\u003e）会被当做常规流量进行路由分流。\u003c/p\u003e\n\u003ch3 id="当使用-tproxy-模式时"\u003e当使用 tproxy 模式时\u003c/h3\u003e\n\u003cp\u003e当“透明代理实现方式”使用 tproxy 时，将“防止DNS污染”设为关闭即可。否则，v2ray-core 会接管发往 53 端口的 DNS 请求，从而会对收到的 DNS 请求再次进行请求。当“防止 DNS 污染”开启时，使用设置中指定的 DNS 进行请求，从而使其他 DNS 客户端的设置失效。\u003c/p\u003e\n\u003cp\u003e当其他 DNS 客户端的上游 DNS 不为普通的 DNS 查询时不受上述影响（普通 DNS 查询意为 \u003ccode\u003eDNS over TCP\u003c/code\u003e 和 \u003ccode\u003eDNS over UDP\u003c/code\u003e），此时虽然 DNS 会经过 v2ray-core，但 v2ray-core 将认为这些请求并非 DNS 请求，从而当做正常流量进行路由分流。\u003c/p\u003e\n\u003cp\u003e因此，最保险的做法是将所有“其他 DNS 客户端”中所指定的 DNS 域名和 IP 都在 RoutingA 中设置直连。 RoutingA 的用法见 \u003ca class="link" href="/docs/manual/routinga/" \u003eRoutingA →\u003c/a\u003e\n\u003c/p\u003e\n'}).add({id:35,href:"https://v2raya.org/docs/advanced-application/public-network-transmission/",title:"作为服务端进行公网传输",description:"v2rayA 作为服务端进行公网传输介绍",content:'\u003ch2 id="requirements"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eDoks uses npm to centralize dependency management, making it \u003ca class="link" href="/docs/help/how-to-update/" \u003eeasy to update\u003c/a\u003e\n resources, build tooling, plugins, and build scripts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDownload and install \u003ca class="link" href="https://nodejs.org/"  target="_blank" rel="noopener"\n    \u003eNode.js\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n (it includes npm) for your platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="start-a-new-doks-project"\u003eStart a new Doks project\u003c/h2\u003e\n\u003cp\u003eCreate a new site, change directories, install dependencies, and start development server.\u003c/p\u003e\n\u003ch3 id="create-a-new-site"\u003eCreate a new site\u003c/h3\u003e\n\u003cp\u003eDoks is available as a child theme, and a starter theme:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUse the Doks child theme, if you do \u003cstrong\u003enot\u003c/strong\u003e plan to customize a lot, and/or need future Doks updates.\u003c/li\u003e\n\u003cli\u003eUse the Doks starter theme, if you plan to customize a lot, and/or do \u003cstrong\u003enot\u003c/strong\u003e need future Doks updates.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNot quite sure? Use the Doks child theme.\u003c/p\u003e\n\u003ch4 id="doks-child-theme"\u003eDoks child theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io-child-theme.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="doks-starter-theme"\u003eDoks starter theme\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/v2rayA/v2raya.github.io.git my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="change-directories"\u003eChange directories\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd my-doks-site\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="install-dependencies"\u003eInstall dependencies\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="start-development-server"\u003eStart development server\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run start\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDoks will start the Hugo development webserver accessible by default at \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e. Saved changes will live reload in the browser.\u003c/p\u003e\n\u003ch2 id="other-commands"\u003eOther commands\u003c/h2\u003e\n'}).add({id:36,href:"https://v2raya.org/docs/advanced-application/intranet-transmission/",title:"HTTP/Socks 带密码的入站",description:"v2rayA 作为服务端进行内网传输介绍",content:'\u003ch2 id="设置带密码的-httpsocks5-入站"\u003e设置带密码的 HTTP/Socks5 入站\u003c/h2\u003e\n\u003cp\u003ev2rayA 利用 RoutingA 可以自由开启 HTTP/Socks5 入站，并设置密码。但即使设置了密码，HTTP/Socks5 仍不适合作为公网传输，也不适合在不信任的内网环境中使用，请仅在安全的内网环境下使用它们。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e将“规则端口的分流模式”选为“RoutingA”。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e在 RoutingA 设置中，在靠前位置插入如下规则：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-python"\u003einbound: httpauthin = http(address: 0.0.0.0, port: 1081, user: user1, pass: user1pass, user:user2, pass:user2pass)\ninbound: socksauthin = socks(address: 0.0.0.0, port: 1082, user: 123, pass: 123)\ninbound: sockslocalin = socks(address: 127.0.0.1, port: 1080)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e注意，不要将此处的端口和预设端口冲突。预设端口（如 20170）的关闭可在 \u003ccode\u003e设置-地址与端口\u003c/code\u003e 中进行。\u003c/p\u003e\n\u003cp\u003e如不额外设置规则，此处的入站将遵守 RoutingA 设置。如需单独指定规则，可使用 \u003ccode\u003einboundTag\u003c/code\u003e。更多 RoutingA 用法见 \u003ca class="link" href="/docs/manual/routinga/" \u003eRoutingA →\u003c/a\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e保存并应用即可。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n'}).add({id:37,href:"https://v2raya.org/docs/advanced-application/nginx-prefix-deploy/",title:"将 v2rayA 部署于前缀路径中",description:"将 v2rayA 部署到指定域名的指定路径下",content:"\u003ch2 id=\"nginx\"\u003eNginx\u003c/h2\u003e\n\u003cp\u003e下面例子中将 v2rayA 部署到 http://example.com:8080/v2raya 。注意，例中未包含 TLS 相关配置，建议添加 TLS 相关配置。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-nginx\"\u003ehttp {\n  map $http_upgrade $connection_upgrade {\n    default upgrade;\n    '' close;\n  }\n  server {\n    listen 8080;\n    server_name example.com;\n    location ^~ /v2raya {\n      proxy_redirect off;\n      proxy_set_header Accept-Encoding \u0026quot;\u0026quot;;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection $connection_upgrade;\n      rewrite ^/v2raya$ / break;\n      rewrite ^/v2raya/(.*)$ /$1 break;\n      sub_filter '\\\u0026quot;static/' '\\\u0026quot;/v2raya/static/';\n      sub_filter '\\\u0026quot;/api' '\\\u0026quot;/v2raya/api';\n      sub_filter_once off;\n      sub_filter_types application/javascript;\n      proxy_pass http://127.0.0.1:2017;\n    }\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\n"}).add({id:38,href:"https://v2raya.org/docs/advanced-application/tproxy-docker-support/",title:"使 tproxy 支持本机 docker 容器",description:"使 tproxy 支持本机 docker 容器",content:'\u003ch3 id="使-tproxy-模式支持-docker-容器"\u003e使 tproxy 模式支持 docker 容器\u003c/h3\u003e\n\u003cp\u003e由于默认情况下 docker 加载的 iptables 网桥模块并不被 tproxy 所支持，v2rayA 在 tproxy 模式下会添加一条规则跳过 docker 容器的代理。而根据 \u003ca class="link" href="https://github.com/springzfx/cgproxy/issues/10#issuecomment-673437557"  target="_blank" rel="noopener"\n    \u003espringzfx/cgproxy#10\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n ，如果你不需要避免 hairpin nat 问题，可通过一些操作使得 tproxy 模式重新支持代理 docker 容器。\u003c/p\u003e\n\u003cp\u003e下面介绍利用透明代理生命周期钩子修改 iptables 规则使得 tproxy 支持 docker 容器。生命周期钩子的介绍见 \u003ca class="link" href="/docs/manual/hook/" \u003e生命周期钩子\u003c/a\u003e\n 一节。\u003c/p\u003e\n\u003cp\u003e编写如下脚本，将其存储于 \u003ccode\u003e/etc/v2raya/tproxy-hook.sh\u003c/code\u003e ：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e#!/bin/bash\n\n# parse the arguments\nfor i in \u0026quot;$@\u0026quot;; do\n  case $i in\n    --transparent-type=*)\n      TYPE=\u0026quot;${i#*=}\u0026quot;\n      shift\n      ;;\n    --stage=*)\n      STAGE=\u0026quot;${i#*=}\u0026quot;\n      shift\n      ;;\n    -*|--*)\n      echo \u0026quot;Unknown option $i\u0026quot;\n      shift\n      ;;\n    *)\n      ;;\n  esac\ndone\n\n\ncase \u0026quot;$STAGE\u0026quot; in\npost-start)\n  # at the post-start stage\n  if [ \u0026quot;$TYPE\u0026quot; = \u0026quot;tproxy\u0026quot; ]; then\n    # we check if the transparent type is tproxy, and if so, we disable the bridge netfilter call and remove the docker rule in the TP_RULE chain.\n    modprobe br_netfilter\n    sysctl net.bridge.bridge-nf-call-ip6tables=0\n    sysctl net.bridge.bridge-nf-call-iptables=0\n    sysctl net.bridge.bridge-nf-call-arptables=0\n    iptables -t mangle -D TP_RULE -i docker+ -j RETURN\n  fi\n  ;;\n*)\n  ;;\nesac\n\nexit 0\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e赋予可执行权限：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo chmod +x /etc/v2raya/tproxy-hook.sh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e启动 v2raya 时添加参数 \u003ccode\u003e--transparent-hook /etc/v2raya/tproxy-hook.sh\u003c/code\u003e。\u003c/p\u003e\n'}).add({id:39,href:"https://v2raya.org/docs/advanced-application/custom-extra-config/",title:"自定义 v2ray-core 配置",description:"自定义 v2ray-core 配置",content:"\u003ch3 id=\"自定义-v2ray-core-配置\"\u003e自定义 v2ray-core 配置\u003c/h3\u003e\n\u003cp\u003e下面介绍利用 core 生命周期钩子修改 v2ray-core 的 config.json，使得自定义配置文件成为可能。生命周期钩子的介绍见 \u003ca class=\"link\" href=\"/docs/manual/hook/\" \u003e生命周期钩子\u003c/a\u003e\n 一节。\u003c/p\u003e\n\u003cp\u003e下面使用脚本在 v2ray-core 启动前添加一个支持 sniffing 的 sniffing-socks 入站，并修改路由部分使得该端口的分流模式跟随规则端口。\u003c/p\u003e\n\u003cp\u003e首先确保 \u003ccode\u003e/usr/bin/python\u003c/code\u003e 可用。\u003c/p\u003e\n\u003cp\u003e编写如下 python 脚本，将其存储于 \u003ccode\u003e/etc/v2raya/core-hook.py\u003c/code\u003e ：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-python\"\u003e#!/usr/bin/python\n\nimport argparse\nfrom os import path\nimport json\n\ndef main():\n    # parse the arguments\n    parser = argparse.ArgumentParser()\n    parser.add_argument('--v2raya-confdir', type=str, required=True)\n    parser.add_argument('--stage', type=str, required=True)\n    args = parser.parse_args()\n\n    # we only modify the config file at the pre-start stage\n    if args.stage != 'pre-start':\n        return\n\n    # read the content from the config.json\n    conf_path = path.join(args.v2raya_confdir, 'config.json')\n    with open(conf_path) as f:\n        conf = json.loads(f.read())\n\n    # append a socks with sniffing and routing rule inbound\n    sniffing_socks = {'port': 11698, 'protocol': 'socks', 'listen': '0.0.0.0', 'sniffing': {'enabled': True}, 'tag': 'sniffing-socks'}\n    conf['inbounds'].append(sniffing_socks)\n\n    # add routing rule support for this inbound (follow the rule port)\n    for rule in conf['routing']['rules']:\n        if 'inboundTag' not in rule:\n            continue\n        with_rule = False\n        for tag in rule['inboundTag']:\n            if tag.startswith('rule-http'):\n                with_rule = True\n                break\n        if with_rule:\n            rule['inboundTag'].append(sniffing_socks['tag'])\n            \n    # write back to the file\n    with open(conf_path, 'w') as f:\n        f.write(json.dumps(conf))\n\nif __name__ == '__main__':\n    main()\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e赋予可执行权限：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-bash\"\u003esudo chmod +x /etc/v2raya/core-hook.py\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e启动 v2raya 时添加参数 \u003ccode\u003e--core-hook /etc/v2raya/core-hook.py\u003c/code\u003e。\u003c/p\u003e\n"}).add({id:40,href:"https://v2raya.org/docs/help/how-to-build/",title:"如何编译",description:"提供手动与自动化两种编译方式。",content:'\u003ch2 id="准备构建环境"\u003e准备构建环境\u003c/h2\u003e\n\u003cp\u003e确保你的系统上安装了 yarn、nodejs、git 和 golang。\u003c/p\u003e\n\u003ch3 id="windows"\u003eWindows\u003c/h3\u003e\n\u003cp\u003e从 \u003ca class="link" href="https://scoop.sh/"  target="_blank" rel="noopener"\n    \u003escoop\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 安装：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-ps1"\u003escoop install yarn nodejs-lts go\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e你不需要再次安装 git，因为 scoop 依赖于 git。换而言之，当你使用 scoop 的时候，git 是一定安装好了的。\u003c/p\u003e\n\u003cp\u003e建议安装 PowerShell Core，，如此 scoop 将能更好地工作（尤其是在旧版本 Windows 系统中）。可以从 \u003ca class="link" href="https://aka.ms/powershell-release?tag=stable"  target="_blank" rel="noopener"\n    \u003eGitHub\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 或 \u003ca class="link" href="https://www.microsoft.com/en-us/p/powershell/9mz1snwt0n5d"  target="_blank" rel="noopener"\n    \u003eMicrosoft Store\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 下载 PowerShell Core。\u003c/p\u003e\n\u003ch3 id="arch-linux-及其衍生版"\u003eArch Linux 及其衍生版\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo pacman -S git yarn go\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="其它-linux"\u003e其它 Linux\u003c/h3\u003e\n\u003ch4 id="安装-git"\u003e安装 Git：\u003c/h4\u003e\n\u003cp\u003eDebian / Ubuntu\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo apt install git\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eRedHat / Alma Linux / Rocky Linux /Fedora\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo dnf install git\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eopenSUSE\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo zypper in git\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="安装-golang"\u003e安装 Golang：\u003c/h4\u003e\n\u003cp\u003e\u003ca class="link" href="https://golang.org/doc/install"  target="_blank" rel="noopener"\n    \u003ehttps://golang.org/doc/install\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/br\u003e或者\u003cbr\u003e\n\u003ca class="link" href="https://golang.google.cn/doc/install"  target="_blank" rel="noopener"\n    \u003ehttps://golang.google.cn/doc/install\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/br\u003e\u003c/p\u003e\n\u003ch4 id="安装-nodejs-与-yarn"\u003e安装 Node.js 与 yarn：\u003c/h4\u003e\n\u003cp\u003e参考官方教程安装 Node.js 的 16.x 的版本，然后再安装 yarn。\u003c/p\u003e\n\u003cp\u003e\u003ca class="link" href="https://github.com/nodesource/distributions"  target="_blank" rel="noopener"\n    \u003ehttps://github.com/nodesource/distributions\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/br\u003e\n\u003ca class="link" href="https://yarnpkg.com/getting-started/install"  target="_blank" rel="noopener"\n    \u003ehttps://yarnpkg.com/getting-started/install\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/p\u003e\n\u003ch3 id="macos"\u003emacOS\u003c/h3\u003e\n\u003cp\u003e首先安装 \u003ca class="link" href="https://brew.sh/"  target="_blank" rel="noopener"\n    \u003ebrew\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n，然后在终端中运行：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ebrew install git yarn go\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e您可以使用 bash 脚本构建 v2rayA。如果要使用 PowerShell 脚本编译 v2rayA，则应先安装 PowerShell Core。可以\u003ca class="link" href="https://aka.ms/powershell-release?tag=stable"  target="_blank" rel="noopener"\n    \u003e从 GitHub\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n 下载 PowerShell Core。\u003c/p\u003e\n\u003ch2 id="使用脚本构建"\u003e使用脚本构建\u003c/h2\u003e\n\u003ch3 id="bash-脚本"\u003eBash 脚本\u003c/h3\u003e\n\u003cp\u003eBash 脚本在类 UNIX 操作系统上运行，例如 Linux 或 macOS。\u003c/p\u003e\n\u003cp\u003e打开终端，\u003ccode\u003ecd\u003c/code\u003e 到 v2rayA 源代码所在路径，然后运行\u003ccode\u003ebash ./build.sh\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id="powershell-脚本"\u003ePowerShell 脚本\u003c/h3\u003e\n\u003cp\u003ePowerShell 脚本可在所有主流操作系统上运行，包括 Windows、Linux 和 macOS。\u003c/p\u003e\n\u003cp\u003e打开 PowerShell 窗口并将 \u003ccode\u003ecd\u003c/code\u003e v2rayA 源代码所在路径，然后运行 ​​\u003ccode\u003e./build-in-pwsh.ps1\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e无论使用哪种编译脚本，只要编译成功，v2rayA 源代码所在路径里面就会多出一个 \u003ccode\u003ev2raya\u003c/code\u003e 或 \u003ccode\u003ev2raya.exe\u003c/code\u003e 的可执行文件。\u003c/p\u003e\n\u003ch2 id="手动构建-v2raya"\u003e手动构建 v2rayA\u003c/h2\u003e\n\u003cp\u003ePR WELCOME\u003c/p\u003e\n'}).add({id:41,href:"https://v2raya.org/docs/help/how-to-update/",title:"如何更新",description:"由于部署方式众多，请仔细查阅，根据自己部署的方式选择相应的更新方式。",content:'\u003ch2 id="更新-v2ray--xray"\u003e更新 V2Ray / Xray\u003c/h2\u003e\n\u003ch3 id="通过脚本更新"\u003e通过脚本更新\u003c/h3\u003e\n\u003cp\u003e脚本会自动获取最新版本然后安装，因此，你只需要重新运行一次安装脚本就能更新核心\u003c/p\u003e\n\u003ch3 id="软件源更新"\u003e软件源更新\u003c/h3\u003e\n\u003cp\u003e如果你从软件源安装了 v2rayA，那么在你更新系统与软件的时候，v2rayA 的更新也会随之安装。以 Debian 系统为例，更新系统与软件的命令为：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo apt update\nsudo apt upgrade\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFedora / CentOS Stream 8 用户应当使用 \u003ccode\u003ednf\u003c/code\u003e 命令以取代 \u003ccode\u003eapt\u003c/code\u003e 命令来获取更新，除此之外，Gnome Software、Discover、系统更新器等图形化工具也可以更新核心。\u003c/p\u003e\n\u003ch2 id="更新-v2raya"\u003e更新 v2rayA\u003c/h2\u003e\n\u003ch3 id="docker-启动方式"\u003eDocker 启动方式\u003c/h3\u003e\n\u003cp\u003eDocker 部署方式更新较为简单、只需要拉取最新镜像重建容器即可\u003c/p\u003e\n\u003ch4 id="拉取最新镜像"\u003e拉取最新镜像\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003edocker pull mzz2017/v2raya\n# nightly 版本\n# docker pull mzz2017/v2raya-nightly\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="重建容器"\u003e重建容器\u003c/h4\u003e\n\u003cdiv class="notice notice-warning" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 576 512"\u003e\u003cpath d="M570 440c18 32-5 72-42 72H48c-37 0-60-40-42-72L246 24c19-32 65-32 84 0l240 416zm-282-86a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e如果原来并没有进行目录挂载、则会导致配置丢失。\u003c/p\u003e\u003c/div\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# 重新执行原来的 `docker run` 命令\ndocker run ....\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="提取并保留容器配置"\u003e提取并保留容器配置\u003c/h4\u003e\n\u003cdiv class="notice notice-warning" \u003e\n    \u003cdiv class="notice-title"\u003e\n        \u003cspan class="notice-icon"\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" class="icon" fill="currentColor" viewBox="0 0 576 512"\u003e\u003cpath d="M570 440c18 32-5 72-42 72H48c-37 0-60-40-42-72L246 24c19-32 65-32 84 0l240 416zm-282-86a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z"/\u003e\u003c/svg\u003e\u003c/span\u003e\n    \u003c/div\u003e\u003cp\u003e如果原来并未进行目录挂载、想在新建容器时保留原来的配置，则需要提取原始容器内部的配置文件，并进行目录映射。\u003c/p\u003e\u003c/div\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# 提取配置文件夹\n# 其中 v2raya 为你的容器名称\ndocker cp v2raya:/etc/v2raya/ /path/to/config\n\n# docker run 命令添加目录挂载信息\n# ... 为省略信息\ndocker run .... -v /path/to/config:/etc/v2raya/ ....  mzz2017/v2raya\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="debian--ubuntu"\u003eDebian / Ubuntu\u003c/h3\u003e\n\u003ch4 id="软件源方式"\u003e软件源方式\u003c/h4\u003e\n\u003cp\u003e如果你从软件源安装了 v2rayA，那么在你更新系统与软件的时候，v2rayA 的更新也会随之安装。更新系统与软件的命令为：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo apt update\nsudo apt upgrade\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eGnome Software、Discover、系统更新器等图形化工具也可以更新 v2rayA。\u003c/p\u003e\n\u003ch4 id="手动更新"\u003e手动更新\u003c/h4\u003e\n\u003cp\u003e从 GitHub 的 Releases 下载新版本，然后覆盖安装即可。\u003c/p\u003e\n\u003ch3 id="fedora--centos-stream"\u003eFedora / CentOS Stream\u003c/h3\u003e\n\u003ch4 id="软件源方式-1"\u003e软件源方式\u003c/h4\u003e\n\u003cp\u003e如果你从软件源安装了 v2rayA，那么在你更新系统与软件的时候，v2rayA 的更新也会随之安装。更新系统与软件的命令为：\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003esudo dnf upgrade\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eGnome Software、Discover、系统更新器等图形化工具也可以更新 v2rayA。\u003c/p\u003e\n\u003ch4 id="手动更新-1"\u003e手动更新\u003c/h4\u003e\n\u003cp\u003e从 GitHub 的 Releases 下载新版本，然后覆盖安装即可。\u003c/p\u003e\n\u003ch3 id="其它基于-rpm-的发行版"\u003e其它基于 rpm 的发行版\u003c/h3\u003e\n\u003ch4 id="手动更新-2"\u003e手动更新\u003c/h4\u003e\n\u003cp\u003e从 GitHub 的 Releases 下载新版本，然后覆盖安装即可。\u003c/p\u003e\n\u003ch3 id="arch-linux"\u003eArch Linux\u003c/h3\u003e\n\u003cp\u003e作为一个 Arch 用户，更新软件这事就不用教了吧！\u003c/p\u003e\n\u003cp\u003e什么？还是要教？看 Manjaro 的！\u003c/p\u003e\n\u003ch3 id="manjaro-linux"\u003eManjaro Linux\u003c/h3\u003e\n\u003ch4 id="从-aur-更新"\u003e从 AUR 更新\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eyay -Syu v2raya #软件包也可能是 v2raya-bin 或 v2raya-git，看你自己\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4 id="手动更新-3"\u003e手动更新\u003c/h4\u003e\n\u003cp\u003e从 GitHub 的 Releases 下载新版本，然后覆盖安装即可。\u003c/p\u003e\n\u003ch4 id="从-arch-linux-cn-源更新"\u003e从 Arch Linux CN 源更新\u003c/h4\u003e\n\u003cfont color="#FF0000"\u003e\n更新是可以的，v2rayA 也是能正常用的，但是其它软件会不会炸掉那是难说的，所以 Manjaro 用户是不被建议去用适配 Arch 的软件源的。\n\u003c/font\u003e\n'}).add({id:42,href:"https://v2raya.org/docs/help/troubleshooting/",title:"Troubleshooting",description:"Solutions to common problems.",content:'\u003ch2 id="problems-updating-npm-packages"\u003eProblems updating npm packages\u003c/h2\u003e\n\u003cp\u003eDelete the \u003ccode\u003e./node_modules\u003c/code\u003e folder, and run again:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="problems-with-cache"\u003eProblems with cache\u003c/h2\u003e\n\u003cp\u003eDelete the temporary directories:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run clean\n\u003c/code\u003e\u003c/pre\u003e\n'}).add({id:43,href:"https://v2raya.org/docs/help/faq/",title:"FAQ",description:"Answers to frequently asked questions.",content:'\u003ch2 id="hyas"\u003eHyas?\u003c/h2\u003e\n\u003cp\u003eDoks is a \u003ca class="link" href="https://gethyas.com/themes/"  target="_blank" rel="noopener"\n    \u003eHyas theme\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n build by the creator of Hyas.\u003c/p\u003e\n\u003ch2 id="footer-notice"\u003eFooter notice?\u003c/h2\u003e\n\u003cp\u003ePlease keep it in place.\u003c/p\u003e\n\u003ch2 id="keyboard-shortcuts-for-search"\u003eKeyboard shortcuts for search?\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003efocus: \u003ccode\u003e/\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eselect: \u003ccode\u003e↓\u003c/code\u003e and \u003ccode\u003e↑\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eopen: \u003ccode\u003eEnter\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eclose: \u003ccode\u003eEsc\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="other-documentation"\u003eOther documentation?\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca class="link" href="https://docs.netlify.com/"  target="_blank" rel="noopener"\n    \u003eNetlify\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca class="link" href="https://gohugo.io/documentation/"  target="_blank" rel="noopener"\n    \u003eHugo\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="can-i-get-support"\u003eCan I get support?\u003c/h2\u003e\n\u003cp\u003eCreate a topic:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca class="link" href="https://community.netlify.com/"  target="_blank" rel="noopener"\n    \u003eNetlify Community\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca class="link" href="https://discourse.gohugo.io/"  target="_blank" rel="noopener"\n    \u003eHugo Forums\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca class="link" href="https://github.com/v2rayA/v2raya.github.io/discussions"  target="_blank" rel="noopener"\n    \u003eDoks Discussions\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="contact-the-creator"\u003eContact the creator?\u003c/h2\u003e\n\u003cp\u003eSend \u003ccode\u003eh-enk\u003c/code\u003e a message:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca class="link" href="https://community.netlify.com/"  target="_blank" rel="noopener"\n    \u003eNetlify Community\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca class="link" href="https://discourse.gohugo.io/"  target="_blank" rel="noopener"\n    \u003eHugo Forums\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca class="link" href="https://github.com/v2rayA/v2raya.github.io/discussions"  target="_blank" rel="noopener"\n    \u003eDoks Discussions\u003cspan\u003e\u003csvg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"\u003e\u003cpath fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"\u003e\u003c/path\u003e \u003cpolygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003c/span\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n'}).add({id:44,href:"https://v2raya.org/docs/help/",title:"Help",description:"Help Doks.",content:""}).add({id:45,href:"https://v2raya.org/docs/manual/",title:"手册",description:"手册",content:""}).add({id:46,href:"https://v2raya.org/docs/prologue/",title:"起步",description:"起步",content:""}).add({id:47,href:"https://v2raya.org/docs/advanced-application/",title:"高级应用",description:"高级应用",content:""}).add({id:48,href:"https://v2raya.org/docs/",title:"用户文档",description:"",content:""}),userinput.addEventListener('input',b,!0),suggestions.addEventListener('click',c,!0);function b(){var d,e;const c=5;d=this.value,e=a.search(d,{limit:c,enrich:!0}),suggestions.classList.remove('d-none'),suggestions.innerHTML="";const b={};e.forEach(a=>{a.result.forEach(a=>{b[a.doc.href]=a.doc})});for(const d in b){const e=b[d],a=document.createElement('div');if(a.innerHTML='<a href><span></span><span></span></a>',a.querySelector('a').href=d,a.querySelector('span:first-child').textContent=e.title,a.querySelector('span:nth-child(2)').textContent=e.description,suggestions.appendChild(a),suggestions.childElementCount==c)break}}function c(){while(suggestions.lastChild)suggestions.removeChild(suggestions.lastChild);return!1}})()